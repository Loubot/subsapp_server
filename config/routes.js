// Generated by CoffeeScript 1.10.0

/**
 * Route Mappings
 * (sails.config.routes)
 *
 * Your routes map URLs to views and controllers.
 *
 * If Sails receives a URL that doesn't match any of the routes below,
 * it will check for matching files (images, scripts, stylesheets, etc.)
 * in your assets directory.  e.g. `http://localhost:1337/images/foo.jpg`
 * might match an image file: `/assets/images/foo.jpg`
 *
 * Finally, if those don't match either, the default 404 handler is triggered.
 * See `api/responses/notFound.js` to adjust your app's 404 logic.
 *
 * Note: Sails doesn't ACTUALLY serve stuff from `assets`-- the default Gruntfile in Sails copies
 * flat files from `assets` to `.tmp/public`.  This allows you to do things like compile LESS or
 * CoffeeScript for the front-end.
 *
 * For more information on configuring custom routes, check out:
 * http://sailsjs.org/#!/documentation/concepts/Routes/RouteTargetSyntax.html
 */
module.exports.routes = {
  'post /auth/signup/team_manager': {
    controller: 'AuthController',
    action: 'team_manager_signup'
  },
  '/': {
    view: 'index'
  },
  'post /api/v1/login': {
    controller: 'WebController',
    action: 'login'
  },
  'post /user/edit': {
    controller: 'UserController',
    action: 'edit_user'
  },
  'get /get-user-teams': {
    controller: 'UserController',
    action: 'get_user_teams'
  },
  'post /create-business': {
    controller: 'OrgController',
    action: 'create_business'
  },
  'delete /delete-business': {
    controller: 'OrgController',
    action: 'destroy_business'
  },
  'get /get-org': {
    controller: 'OrgController',
    action: 'get_org'
  },
  'get /all-org': {
    controller: 'OrgController',
    action: 'all_org'
  },
  'get /org-admins': {
    controller: 'OrgController',
    action: 'get_org_admins'
  },
  'post /create-team': {
    controller: 'TeamController',
    action: 'create_team'
  },
  'delete /delete-team': {
    controller: 'TeamController',
    action: 'destroy_team'
  },
  'get /get-team': {
    controller: 'TeamController',
    action: 'get_team'
  },
  'post /join-team': {
    controller: 'TeamController',
    action: 'join_team'
  },
  'get /get-team-info': {
    controller: 'TeamController',
    action: 'get_team_info'
  },
  'get /get-teams': {
    controller: 'TeamController',
    action: 'get_teams'
  },
  'post /create-payment': {
    controller: 'PaymentController',
    action: 'create_payment'
  },
  'post /up-token': {
    controller: 'TokenController',
    action: 'up_token'
  },
  'post /create-event': {
    controller: 'EventController',
    action: 'create_event'
  },
  'post /join-event': {
    controller: 'EventController',
    action: 'join_event'
  },
  'get /get-event-members': {
    controller: 'EventController',
    action: 'get_event_members'
  },
  'post /invite-manager': {
    controller: 'InviteController',
    action: 'invite_manager'
  },
  'get /get-invite': {
    controller: 'InviteController',
    action: 'get_invite'
  },
  'post /upload-file': {
    controller: 'FileController',
    action: 'upload'
  },
  'get /parse-users': {
    controller: 'FileController',
    action: 'parse_users'
  },
  'get /parse-players': {
    controller: 'FileController',
    action: 'parse_players'
  },
  'post /post_remind': {
    controller: 'PasswordReminderController',
    action: 'post_remind'
  },
  'get /reset/{reminder_token}': {
    controller: 'PasswordReminderController',
    action: 'get_reset'
  },
  'post /reset': {
    controller: 'PasswordReminderController',
    action: 'post_reset'
  }
};
