// Generated by CoffeeScript 1.10.0

/**
 * Route Mappings
 * (sails.config.routes)
 *
 * Your routes map URLs to views and controllers.
 *
 * If Sails receives a URL that doesn't match any of the routes below,
 * it will check for matching files (images, scripts, stylesheets, etc.)
 * in your assets directory.  e.g. `http://localhost:1337/images/foo.jpg`
 * might match an image file: `/assets/images/foo.jpg`
 *
 * Finally, if those don't match either, the default 404 handler is triggered.
 * See `api/responses/notFound.js` to adjust your app's 404 logic.
 *
 * Note: Sails doesn't ACTUALLY serve stuff from `assets`-- the default Gruntfile in Sails copies
 * flat files from `assets` to `.tmp/public`.  This allows you to do things like compile LESS or
 * CoffeeScript for the front-end.
 *
 * For more information on configuring custom routes, check out:
 * http://sailsjs.org/#!/documentation/concepts/Routes/RouteTargetSyntax.html
 */
module.exports.routes = {
  'post /auth/signin': {
    controller: 'AuthController',
    action: 'signin'
  },
  'post /auth/signup': {
    controller: 'AuthController',
    action: 'signup'
  },
  'post /auth/parent-signup': {
    controller: 'AuthController',
    action: 'parent_sign_up'
  },
  'post /auth/signup/team_manager': {
    controller: 'AuthController',
    action: 'team_manager_signup'
  },
  '/': {
    view: 'index'
  },
  'get /user/:id': {
    controller: 'UserController',
    action: 'findOne'
  },
  'post /user/edit/:id': {
    controller: 'UserController',
    action: 'update'
  },
  'post /parent/associate-kids': {
    controller: 'ParentController',
    action: 'associate_kids'
  },
  'get /parent/parents-with-events/:id': {
    controller: 'ParentController',
    action: 'parents_with_events'
  },
  'get /parent/social/:id': {
    controller: 'ParentController',
    action: 'social'
  },
  'get /parent/financial/:id': {
    controller: 'ParentController',
    action: 'financial'
  },
  'get /parent/kids-with-parents': {
    controller: 'ParentController',
    action: 'kids_with_parents'
  },
  'get /parent/token_payments/:id': {
    controller: 'ParentController',
    action: 'token_payments'
  },
  'post /org': {
    controller: 'OrgController',
    action: 'create'
  },
  'delete /delete-business/:id': {
    controller: 'OrgController',
    action: 'destroy_business'
  },
  'get /org/:id': {
    controller: 'OrgController',
    action: 'findOne'
  },
  'get /orgs': {
    controller: 'OrgController',
    action: 'find'
  },
  'get /org/s3-info/:id': {
    controller: 'OrgController',
    action: 's3_info'
  },
  'get /org/get-org-team-members/:id': {
    controller: 'OrgController',
    action: 'get_org_team_members'
  },
  'get /org/org-admins/:id': {
    controller: 'OrgController',
    action: 'get_org_admins'
  },
  'get /org/teams-and-mangers/:id': {
    controller: 'OrgController',
    action: 'get_teams_and_managers'
  },
  'post /org/withdraw/:id': {
    controller: 'OrgController',
    action: 'withdraw'
  },
  'post /location': {
    controller: 'LocationController',
    action: 'create'
  },
  'get /locations': {
    controller: 'LocationController',
    action: 'index'
  },
  'get /team/:id': {
    controller: 'TeamController',
    action: 'findOne'
  },
  'post /team/update/:id': {
    controller: 'TeamController',
    action: 'update'
  },
  'post /team': {
    controller: 'TeamController',
    action: 'create'
  },
  'post /join-team': {
    controller: 'TeamController',
    action: 'join_team'
  },
  'get /team/get-team-info/:id': {
    controller: 'TeamController',
    action: 'get_team_info'
  },
  'get /team/get-players-by-year/:id': {
    controller: 'TeamController',
    action: 'get_players_by_year'
  },
  'post /team/update-members/:id': {
    controller: 'TeamController',
    action: 'update_members'
  },
  'get /team/org-members/:id': {
    controller: 'TeamController',
    action: 'org_members'
  },
  'get /team/:id/teams-events': {
    controller: 'TeamController',
    action: 'teams_events'
  },
  'post /create-payment': {
    controller: 'PaymentController',
    action: 'create_payment'
  },
  'get /payment/get-transactions/:id': {
    controller: 'PaymentController',
    action: 'get_transactions'
  },
  'post /up-token': {
    controller: 'TokenController',
    action: 'up_token'
  },
  'post /payment/:id/authenticate-stripe': {
    controller: 'PaymentController',
    action: 'authenticate_stripe'
  },
  'post /event': {
    controller: 'EventController',
    action: 'create'
  },
  'post /event/create-multi-event': {
    controller: 'EventController',
    action: 'create_multi_event'
  },
  'post /join-event': {
    controller: 'EventController',
    action: 'join_event'
  },
  'get /get-event-members': {
    controller: 'EventController',
    action: 'get_event_members'
  },
  'post /event/parent/create-event': {
    controller: 'EventController',
    action: 'create_parent_event'
  },
  'post /invite-manager': {
    controller: 'InviteController',
    action: 'invite_manager'
  },
  'get /get-invite': {
    controller: 'InviteController',
    action: 'get_invite'
  },
  'post /file/upload': {
    controller: 'FileController',
    action: 'upload'
  },
  'get /parse-users': {
    controller: 'FileController',
    action: 'parse_users'
  },
  'post /file/parse-players': {
    controller: 'FileController',
    action: 'parse_players'
  },
  'get /download-file': {
    controller: 'FileController',
    action: 'download_file'
  },
  'post /post_remind': {
    controller: 'PasswordReminderController',
    action: 'post_remind'
  },
  'get /eventresponse/:id': {
    controller: 'EventResponseController',
    action: 'find'
  },
  'post /eventresponse/pay': {
    controller: 'EventResponseController',
    action: 'pay'
  },
  'post /eventresponse/decline': {
    controller: 'EventResponseController',
    action: 'decline'
  },
  'patch /eventresponse/update': {
    controller: 'EventResponseController',
    action: 'update'
  },
  'post /gcm/tokens/:id': {
    controller: 'GCMController',
    action: 'create_token'
  },
  'post /gcm/send-message': {
    controller: 'GCMController',
    action: 'send_message'
  },
  'put /gcm': {
    controller: 'GCMController',
    action: 'update'
  }
};
