// Generated by CoffeeScript 1.10.0

/**
 * app.js
 *
 * Use `app.js` to run your app without `sails lift`.
 * To start the server, run: `node app.js`.
 *
 * This is handy in situations where the sails CLI is not relevant or useful.
 *
 * For example:
 *   => `node app.js`
 *   => `forever start app.js`
 *   => `node debug app.js`
 *   => `modulus deploy`
 *   => `heroku scale`
 *
 *
 * The same command-line arguments are supported, e.g.:
 * `node app.js --silent --port=80 --prod`
 */
process.chdir(__dirname);

(function() {
  var e, e0, e1, error, error1, error2, rc, sails;
  sails = void 0;
  try {
    sails = require('sails');
  } catch (error) {
    e = error;
    console.error('To run an app using `node app.js`, you usually need to have a version of `sails` installed in the same directory as your app.');
    console.error('To do that, run `npm install sails`');
    console.error('');
    console.error('Alternatively, if you have sails installed globally (i.e. you did `npm install -g sails`), you can use `sails lift`.');
    console.error('When you run `sails lift`, your app will still use a local `./node_modules/sails` dependency if it exists,');
    console.error('but if it doesn\'t, the app will run with the global sails instead!');
    return;
  }
  rc = void 0;
  try {
    rc = require('rc');
  } catch (error1) {
    e0 = error1;
    try {
      rc = require('sails/node_modules/rc');
    } catch (error2) {
      e1 = error2;
      console.error('Could not find dependency: `rc`.');
      console.error('Your `.sailsrc` file(s) will be ignored.');
      console.error('To resolve this, run:');
      console.error('npm install rc --save');
      rc = function() {
        ({});
      };
    }
  }
  sails.lift(rc('sails'));
})();
