// Generated by CoffeeScript 1.10.0

/**
 * PaymentController
 *
 * @description :: Server-side logic for managing Payments
 * @help        :: See http://sailsjs.org/#!/documentation/concepts/Controllers
 */
var passport;

passport = require('passport');

module.exports = {
  create_payment: function(req, res) {
    var Stripe, charge;
    sails.log.debug("Hit the Payment controller/create_payment");
    Stripe = require("stripe")(sails.config.stripe.stripe_secret);
    return charge = Stripe.charges.create({
      source: req.body.stripe_token,
      description: 'Example charge',
      amount: parseInt(req.body.amount) * 100,
      currency: 'eur'
    }).then(function(charge) {
      sails.log.debug("Charge response " + (JSON.stringify(charge.amount)));
      return Token.findOne({
        owner: req.body.user_id
      }).exec(function(err, token) {
        sails.log.debug("Token amount " + token.amount);
        token.amount = token.amount + (charge.amount / 100);
        return token.save(function(err, token) {
          sails.log.debug("Token saved " + (JSON.stringify(token)));
          if ((err != null)) {
            sails.log.debug("Token saved error " + (JSON.stringify(err)));
          }
          return res.ok({
            token: token,
            message: 'Tokens purchased successfully'
          });
        });
      });
    })["catch"](function(err) {
      sails.log.debug("Charge err " + (JSON.stringify(err)));
      return res.serverError("Charge refused");
    });
  },
  pay_for_event: function(req, res) {
    sails.log.debug("Hit the Payment controller/pay_for_event");
    sails.log.debug("Pay for event params " + (JSON.stringify(req.body)));
    return res.created(200);
  }
};
