// Generated by CoffeeScript 1.10.0

/**
 * InviteController
 *
 * @description :: Server-side logic for managing passwordReminder
 * @help        :: See http://sailsjs.org/#!/documentation/concepts/Controllers
 */
module.exports = {
  post_remind: function(req, res) {
    var makePasswordReminderToken;
    sails.log.debug("Hit PasswordReminder controller/post_remind");
    sails.log.debug("params " + (JSON.stringify(req.body)));
    User.findOne({
      email: req.body.user_email
    }).then(function(user) {
      var reminderToken;
      sails.log.debug("Found user " + (JSON.stringify(user)));
      if (user != null) {
        reminderToken = makePasswordReminderToken();
        return PasswordReminder.create({
          email: req.body.user_email,
          remind_password_token: reminderToken
        }).exec((function(err, password) {
          sails.log.debug("User exists " + (JSON.stringify(user)));
          res.json({
            user: user,
            message: 'User already exists'
          });
          sails.log.debug("Password reminder created " + (JSON.stringify(password)));
          return MandrillService.password_remind(reminderToken, user.email);
        }));
      } else {
        sails.log.debug("Password reminder Not created " + (JSON.stringify(password)));
        if (typeof err !== "undefined" && err !== null) {
          sails.log.debug("Password reminder err " + (JSON.stringify(err)));
        }
        return res.json({
          user: user,
          message: 'No user in database exists'
        });
      }
    });
    makePasswordReminderToken = function() {
      var i, possible, text;
      text = '';
      possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
      i = 0;
      while (i < 60) {
        text += possible.charAt(Math.floor(Math.random() * possible.length));
        i++;
      }
      return text;
    };
    ({
      post_reset: function(req, res) {}
    });
    sails.log.debug("Hit PasswordReminder controller/reset");
    sails.log.debug("params " + (JSON.stringify(req.body)));
    return PasswordReminder.findOne({
      remind_password_token: req.body.reminder_password_token
    }).then(function(passwordReminder) {
      sails.log.debug("Found PasswordReminder " + (JSON.stringify(passwordReminder)));
      ({
        message: 'Password Reminder found'
      });
      if (passwordReminder != null) {
        return User.findOne({
          email: passwordReminder.email
        }).then(function(user) {
          var hashedPassword;
          sails.log.debug("Found user " + (JSON.stringify(user)));
          hashedPassword = CipherService.hashPassword(password);
          ({
            message: 'User found'
          });
          if (user != null) {
            return User.Update({
              password: hashedPassword
            }).exec((function(err, password) {
              sails.log.debug("User exists " + (JSON.stringify(user)));
              res.json({
                user: user,
                message: 'User is Updated'
              });
              return sails.log.debug("Password reminder created " + (JSON.stringify(password)));
            }));
          } else {
            sails.log.debug("User Not Updated " + (JSON.stringify(user)));
            if (typeof err !== "undefined" && err !== null) {
              sails.log.debug("User Update err " + (JSON.stringify(err)));
            }
            return res.json({
              user: user,
              message: 'No user in database exists'
            });
          }
        });
      }
    });
  }
};
