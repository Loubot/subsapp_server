// Generated by CoffeeScript 1.10.0

/**
 * AuthController
 * @description :: Server-side logic for manage user's authorization
 */
var _onPassportAuth, passport;

passport = require('passport');


/**
 * Triggers when user authenticates via passport
 * @param {Object} req Request object
 * @param {Object} res Response object
 * @param {Object} error Error object
 * @param {Object} user User profile
 * @param {Object} info Info if some error occurs
 * @private
 */

sails.log.silly();

_onPassportAuth = function(req, res, error, user, info) {
  if (error) {
    return res.serverError(error);
  }
  if (!user) {
    return res.unauthorized(null, info && info.code, info && info.message);
  }
  return res.ok({
    token: CipherService.createToken(user),
    user: user
  });
};

module.exports = {
  signup: function(req, res) {
    User.create(_.omit(req.allParams(), 'id')).then(function(user) {
      return {
        token: CipherService.createToken(user),
        user: user
      };
    }).then(res.created)["catch"](res.serverError);
  },
  signin: function(req, res) {
    passport.authenticate('local', _onPassportAuth.bind(this, req, res))(req, res);
  }
};
