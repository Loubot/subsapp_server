###*
# Team
# @description :: Model for storing teams
###
moment = require('moment')
module.exports =
  # migrate: 'alter'
  # adapter: 'mysql',
  autoUpdatedAt: true
  autoCreatedAt: true
  autoPK: true
  schema: true
  attributes:
    # username:
    #   type: 'string'
    #   required: true
    #   unique: true
    #   alphanumericdashed: true
      
    name:
      type: 'string'
      defaultsTo: ''
      required: true

    main_org: 
      model: 'org'
      required: true

    manager:
      model: 'user'

    team_members:
      collection: 'user'
      via: 'user_teams'

    events:
      collection: 'event'
      via: 'event_team'

    files:
      collection: 'filetracker'
      via: 'team'

    eligible_date:
      type: 'date'
      defaultsTo: null

    eligible_date_end:
      type: 'date'
      defaultsTo: null

    


    
    toJSON: ->
      obj = @toObject()
      delete obj.password
      delete obj.socialProfiles
      obj
  # beforeUpdate: (values, next) ->
  #   CipherService.hashPassword values
  #   next()
  #   return
  # beforeCreate: (values, next) ->
  #   CipherService.hashPassword values
  #   next()
  #   return

  beforeUpdate: ( values, next ) ->
    sails.log.debug "Values #{ JSON.stringify values }"
    # if values.eligible_date_end == null
    sails.log.debug "eligible_date is null so defaulting to 1 year"
    values.eligible_date_end = moment( values.eligible_date ).add( 364, 'days' ).toISOString()
    
    # Team.update( { id: values.id }, eligible_date_end: end_date ).exec( ( err, updated ) ->
    #   if err?
    #     sails.log.debug "Team update eligible_date error #{ JSON.stringify err }"
    #     throw err
    #   else 
    #     sails.log.debug "Team update eligible_date #{ JSON.stringify updated }"
    # )
    sails.log.debug "Values updated #{ JSON.stringify values }"
    next()


# ---
# generated by js2coffee 2.1.0