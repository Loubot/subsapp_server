###*
# Token
# @description :: Model for storing OrgTokenBalance
###

module.exports =
  # migrate: 'alter'
  # adapter: 'mysql',
  autoUpdatedAt: true
  autoCreatedAt: true
  autoPK: true
  schema: true
  attributes:
    tokens:
      type: 'integer'
      required: true
      defaultsTo: 0


  ################## associations ###########################

    org_id: 
      model: 'org'
      unique: true
      
    
    toJSON: ->
      obj = @toObject()
      obj
  # beforeUpdate: (values, next) ->
  #   CipherService.hashPassword values
  #   next()
  #   return
  # beforeCreate: (values, next) ->
  #   CipherService.hashPassword values
  #   next()
  #   return

  updateOrCreate: (criteria, values, cb) ->
    sails.log.debug "OrgTokenBalance update or create values #{ JSON.stringify values }"
    sails.log.debug "OrgTokenBalance update or create criteria #{ JSON.stringify criteria }"
    self = this
    # reference for use by callbacks
    # If no values were specified, use criteria
    if !values
      values = if criteria.where then criteria.where else criteria
    @findOne criteria, (err, result) ->
      if err
        sails.log.debug "OrgTokenBalance findOne err #{ JSON.stringify err }"
        return cb(err, false)
      if result
        sails.log.debug "OrgTokenBalance findOne #{ JSON.stringify result }"
        self.update criteria, values, cb
      else

        sails.log.debug "OrgTokenBalance findOne #{ JSON.stringify result }"
        self.create values, cb
      return
    return



# ---
# generated by js2coffee 2.1.0