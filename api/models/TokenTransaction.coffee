###*
# Team
# @description :: Model for storing token transactions
###

module.exports =
  # migrate: 'alter'
  # adapter: 'mysql',
  autoUpdatedAt: true
  autoCreatedAt: true
  autoPK: true
  schema: true
  attributes:
    # username:
    #   type: 'string'
    #   required: true
    #   unique: true
    #   alphanumericdashed: true
      
    event_id: 
      type: 'integer'
      required: true
      defaultsTo: null

    user_id:
      type: 'integer'
      required: true
      defaultsTo: null

    parent_id:
      type: 'integer'
      required: true
      defaultsTo: null

    team_id: 
      type: 'integer'
      required: true
      defaultsTo: null

    token_amount:
      type: 'integer'
      required: true
      defaultsTo: null

    paid:
      type: 'boolean'
      required: true
      defaultsTo: false

    declined: 
      type: 'boolean'  
      defaultsTo: false

    addedToCalendar:
      type: 'boolean'
      defaultsTo: false

    
    toJSON: ->
      obj = @toObject()
      
      obj
  # beforeUpdate: (values, next) ->
  #   CipherService.hashPassword values
  #   next()
  #   return
  # beforeCreate: (values, next) ->
  #   CipherService.hashPassword values
  #   next()
  #   return

  updateOrCreate: (criteria, values, cb) ->
    self = this
    # reference for use by callbacks
    # If no values were specified, use criteria
    if !values
      values = if criteria.where then criteria.where else criteria
    @findOne criteria, (err, result) ->
      if err
        return cb(err, false)
      if result
        self.update criteria, values, cb
      else
        self.create values, cb
      return
    return


# ---
# generated by js2coffee 2.1.0