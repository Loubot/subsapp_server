// Generated by CoffeeScript 1.10.0

/**
 * User
 * @description :: Model for storing users
 */
var moment;

moment = require('moment');

module.exports = {
  autoUpdatedAt: true,
  autoCreatedAt: true,
  autoPK: true,
  schema: true,
  attributes: {
    email: {
      type: 'email',
      required: true,
      unique: true
    },
    firstName: {
      type: 'string',
      defaultsTo: ''
    },
    lastName: {
      type: 'string',
      defaultsTo: ''
    },
    address: {
      type: 'text',
      defaultsTo: ''
    },
    dob: {
      type: 'string',
      defaultsTo: ''
    },
    dob_stamp: {
      type: 'datetime',
      defaultsTo: null
    },
    password: {
      type: 'string'
    },
    club_admin: {
      type: 'boolean',
      required: true,
      defaultsTo: false
    },
    team_admin: {
      type: 'boolean',
      required: true,
      defaultsTo: false
    },
    under_age: {
      type: 'boolean',
      required: true,
      defaultsTo: false
    },
    orgs: {
      collection: 'org',
      via: 'admins'
    },
    teams: {
      collection: 'team',
      via: 'manager'
    },
    user_orgs: {
      collection: 'org',
      via: 'org_members'
    },

    /* non admin attributes */
    user_events: {
      collection: 'event',
      via: 'event_user'
    },
    tokens: {
      collection: 'token',
      via: 'owner'
    },
    user_teams: {
      collection: 'team',
      via: 'team_members'
    },
    toJSON: function() {
      var obj;
      obj = this.toObject();
      delete obj.password;
      delete obj.socialProfiles;
      return obj;
    }
  },
  beforeCreate: function(values, next) {
    CipherService.hashPassword(values);
    next();
  },
  create_players: function(player_array, cb) {
    var i, len, player, x;
    x = new Array();
    for (i = 0, len = player_array.length; i < len; i++) {
      player = player_array[i];
      User.create({
        email: player[4],
        firstName: player[0],
        lastName: player[1],
        dob: player[3],
        dob_stamp: moment(player[3], ["MM-DD-YYYY", "DD-MM", "DD-MM-YYYY"]).toISOString(),
        under_age: true
      }).then(function(user) {
        sails.log.debug("User created " + (JSON.stringify(user)));
        return x.push(user);
      })["catch"](function(err) {
        sails.log.debug("User create error " + (JSON.stringify(err)));
        cb(err);
        return false;
      });
    }
    return cb(null, x);
  }
};
