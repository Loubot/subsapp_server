###*
# isClubAdmin
# @description :: Policy to check is user is admin
###


module.exports = (req, res, next) ->
  sails.log.debug "Policies/isClubAdmin"
  sails.log.debug "Body #{ JSON.stringify req.body }"
  sails.log.debug "Params #{ req.param('id') }"

  if !Boolean( req.user.club_admin )
    sails.log.debug "No club admin flag"
    return res.negotiate "You are not authourised"
  else if ( req.param('id') == 'undefined' )
    sails.log.debug "isClubAdmin no id param"
    return res.negotiate "ID param not present"


  Org.findOne( id: req.param('id') ).populateAll().then( ( org ) ->
    sails.log.debug "Find org #{ JSON.stringify org }"
    if Boolean( req.user.super_admin )
      req.org = org
      next()
      return

    
    if !org.user_id? or org.user_id.id != req.user.id
      return res.negotiate "Your are not authourised"
    req.org = org
    next()
  ).catch( ( org_err ) ->
    sails.log.debug "Org err #{ org_err }"
    return res.negotiate org_err
  )

 

  
 

  # else if typeof req.param('id') != undefined
  #   sails.log.debug "isClubAdmin param('id')"
  #   if !( parseInt( req.user.org[0].id ) == parseInt( req.param('id') ) )
  #     return res.negotiate "You are not authourised to view this"
      
  # else if typeof req.body.org_id != undefined
  #   sails.log.debug "isClubAdmin req.body.org_id"
  #   if !( parseInt( req.user.org[0].id ) == parseInt( req.body.org_id ) )
  #     return res.negotiate "You are not authourised to view this"

  # next()
  
# ---
# generated by js2coffee 2.1.0
  