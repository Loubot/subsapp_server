// Generated by CoffeeScript 1.10.0
'use strict';
var return_teams;

angular.module('subzapp').controller('OrgController', [
  '$scope', '$state', '$http', '$window', '$location', 'user', 'message', 'RESOURCES', function($scope, $state, $http, $window, $location, user, message, RESOURCES) {
    var check_club_admin, params;
    check_club_admin = function(user) {
      if (!user.club_admin) {
        $state.go('login');
      }
      message.error('You are not a club admin. Contact subzapp admin team for assitance');
      return false;
    };
    console.log('Org Controller');
    if (!(window.USER != null)) {
      user.get_user().then((function(res) {
        $scope.orgs = res.data.orgs;
        check_club_admin(res.data);
        $scope.user = res.data;
        return $scope.teams = return_teams(window.USER.teams, $location.search().id);
      }), function(errResponse) {
        console.log("User get error " + (JSON.stringify(errResponse)));
        window.USER = null;
        return $state.go('login');
      });
    } else {
      console.log("USER already defined");
      $scope.org = window.USER.orgs[0];
      $scope.teams = return_teams(window.USER.teams, $location.search().id);
    }
    console.log("check it " + (JSON.stringify($location.search())));
    params = $location.search();
    $scope.business_create = function() {
      var user_token;
      user_token = window.localStorage.getItem('user_token');
      $scope.business_form_data.user_id = window.localStorage.getItem('user_id');
      console.log(JSON.stringify($scope.business_form_data));
      return $http({
        method: 'POST',
        url: RESOURCES.DOMAIN + "/create-business",
        headers: {
          'Authorization': "JWT " + user_token,
          "Content-Type": "application/json"
        },
        data: $scope.business_form_data
      }).then((function(response) {
        console.log("Business create return " + (JSON.stringify(response.data)));
        $scope.orgs = response.data;
        $('.business_name').val("");
        return $('.business_address').val("");
      }), function(errResponse) {
        console.log("Business create error response " + (JSON.stringify(errResponse)));
        return $state.go('login');
      });
    };
    return $scope.delete_business = function(id) {
      var user_token;
      user_token = JSON.parse(window.localStorage.getItem('user_token'));
      return $http({
        method: 'DELETE',
        url: RESOURCES.DOMAIN + "/delete-business",
        headers: {
          'Authorization': "JWT " + user_token,
          "Content-Type": "application/json"
        },
        data: {
          org_id: id
        }
      }).then((function(response) {
        return console.log("Delete response " + (JSON.stringify(response)));
      }), function(errResponse) {
        return console.log("Delete error response " + (JSON.stringify(errResponse)));
      });
    };
  }
]);

return_teams = function(all_teams, id) {
  var teams;
  teams = [];
  $(window.USER.teams).each(function() {
    if (this.main_org === parseInt(id)) {
      return teams.push(this);
    }
  });
  return teams;
};
