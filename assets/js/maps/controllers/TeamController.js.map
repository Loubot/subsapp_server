{"version":3,"sources":["controllers/TeamController.coffee"],"names":[],"mappings":"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","file":"controllers/TeamController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\n\nangular.module('subzapp').controller('TeamController', [\n  '$scope'\n  '$state'\n  '$http'\n  '$window'\n  '$location'\n  'user'\n  'alertify'\n  'RESOURCES'\n  'Upload'\n  ( $scope, $state, $http, $window, $location, user, alertify, RESOURCES, Upload ) ->    \n    console.log 'Team Controller'\n    user_token = window.localStorage.getItem 'user_token'\n\n    if !(window.USER?)\n      user.get_user().then ( (res) ->\n        # console.log \"User set to #{ JSON.stringify res }\"\n        # console.log \"TeamController teams #{ JSON.stringify window.USER }\"\n        $scope.user = window.USER\n        $scope.org = window.USER.orgs[0]\n        $scope.teams = window.USER.teams\n        return_team( USER.teams, $location.search().id )\n        $scope.show_upload = window.USER.club_admin\n        # if $location.$$path == '/team-manager'\n\n        \n        # console.log \"f #{ JSON.stringify USER.teams }\"\n      ), ( errResponse ) ->\n        window.USER = null\n        # $state.go 'login'\n    else\n      console.log \"USER already defined\"\n      $scope.user = window.USER\n      $scope.org = window.USER.orgs[0]\n      $scope.teams = window.USER.teams\n      $scope.user = window.USER\n    \n\n    $http(\n      method: 'GET'\n      url: \"#{ RESOURCES.DOMAIN }/get-team-info\"\n      headers: { \n                'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                }\n      params:\n        team_id: window.localStorage.getItem 'team_id'\n    ).then ( (res) ->\n       console.log \"Get team info response\"\n       console.log res.data.team\n       $scope.team = res.data.team\n       $scope.members = res.data.team.team_members\n       $scope.events = res.data.team.events\n       $scope.files = res.data.bucket_info.Contents\n    ), ( errResponse ) ->\n      console.log \"Get team info error #{ JSON.stringify errResponse }\"\n  \n      \n    $scope.create_event = ->\n      $scope.create_event_data.team_id = $location.search().id\n      console.log $scope.create_event_data\n      $http(\n        method: 'POST'\n        url: \"#{ RESOURCES.DOMAIN }/create-event\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\",\n                  'Content-Type': 'application/json'\n                  }\n        data: $scope.create_event_data\n      ).then ( (res) ->\n        # console.log \"Create event response\"\n        alertify.success(\"Event created\")\n        console.log res.data\n        $scope.events = res.data\n      ), ( errResponse ) ->\n        console.log \"Create event error\"\n        alertify.error \"Create event failed\"\n        console.log errResponse\n\n\n    # upload file\n\n    $scope.submit = ->\n      \n      $scope.upload $scope.file\n\n    $scope.upload = (file) ->\n      console.log \"Upload\"\n      console.log file\n      console.log JSON.stringify $scope.team.name\n      Upload.upload(\n        method: 'post'\n        url: '/file/upload'\n        file: file\n        data:\n          org_id: $scope.team.main_org.id\n          team_id: $scope.team.id\n          team_name: $scope.team.name\n          \n      ).then ((resp) ->\n        console.log 'Success ' + JSON.stringify resp + 'uploaded. Response: ' + JSON.stringify resp.data\n        console.log resp\n        $scope.files = resp.data.bucket_info.Contents\n        alertify.success \"File uploaded ok\"\n        return\n      ), ((resp) ->\n        console.log 'Error status: ' + resp.status\n        alertify.error \"File failed to upload\"\n        console.log resp\n\n        alertify.error \"File upload failed. Status: #{ resp.status }\"\n        return\n      ), (evt) ->\n        progressPercentage = parseInt(100.0 * evt.loaded / evt.total)\n        console.log 'progress: ' + progressPercentage + '% ' + evt.config.data\n\n  \n    $scope.download = ->\n      $http(\n        method: 'GET'\n        url: \"#{ RESOURCES.DOMAIN }/download-file\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n        \n      ).then ( (res) ->\n         console.log \"Download response\"\n         console.log res\n         \n      ), ( errResponse ) ->\n        console.log \"DOwnload error #{ JSON.stringify errResponse }\"\n\n])\n\nreturn_team = ( teams, id ) ->\n  team = (team for team in teams when team.id is parseInt( id ))\n  console.log \"Team #{ JSON.stringify team }\"\n  return team"]}