{"version":3,"sources":["controllers/TeamController.coffee"],"names":[],"mappings":"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","file":"controllers/TeamController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\n\nangular.module('subzapp').controller('TeamController', [\n  '$scope'\n  '$rootScope'\n  '$state'\n  '$http'\n  '$window'\n  '$location'\n  'user'\n  'alertify'\n  'RESOURCES'\n  '$filter'\n  'usSpinnerService'\n  ( $scope, $rootScope, $state, $http, $window, $location, user, alertify, RESOURCES, $filter, usSpinnerService ) ->    \n    console.log 'Team Controller'\n    user_token = window.localStorage.getItem 'user_token'\n\n    get_team_info = ->\n      usSpinnerService.spin('spinner-1')\n      if $rootScope.user.club_admin\n        $http(\n          method: 'GET'\n          url: \"#{ RESOURCES.DOMAIN }/team/get-team-info/#{ window.localStorage.getItem 'team_id' }\"\n          headers: { \n                    'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                    }\n          \n        ).then ( (res) ->\n          usSpinnerService.stop('spinner-1')\n          console.log \"get_team_info response club admin\"\n          console.log res\n          $scope.team = res.data.team\n          \n          $scope.org_members = res.data.org.org_members\n           \n          \n        ), ( errResponse ) ->\n          usSpinnerService.stop('spinner-1')\n          console.log \"get_team_info error\"\n          console.log errResponse\n      else\n        $http(\n          method: 'GET'\n          url: \"#{ RESOURCES.DOMAIN }/team/#{ window.localStorage.getItem 'team_id' }\"\n          headers: { \n                    'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                    }\n\n        ).then ( (res) ->\n          usSpinnerService.stop('spinner-1')\n          console.log \"Get team info response\"\n          console.log res.data\n          $scope.team = res.data\n           \n        ), ( errResponse ) ->\n          usSpinnerService.stop('spinner-1')\n          console.log \"Get team info error #{ JSON.stringify errResponse }\"\n          $state.go 'login'\n\n    if !($rootScope.USER?)\n      user.get_user().then ( (res) ->\n        # console.log \"User set to #{ JSON.stringify res }\"\n        # console.log \"TeamController teams #{ JSON.stringify window.USER }\"\n        $scope.user = $rootScope.USER\n        $scope.org = $rootScope.USER.orgs[0]\n        $scope.teams = $rootScope.USER.teams\n        return_team( $rootScope.USER.teams, $location.search().id )\n        $scope.show_upload = $rootScope.USER.club_admin\n        get_team_info() if $rootScope.club_admin\n      ), ( errResponse ) ->\n        $rootScope.USER = null\n        # $state.go 'login'\n    else\n      console.log \"USER already defined\"\n      $scope.user = $rootScope.USER\n      $scope.org = $rootScope.USER.orgs[0]\n      $scope.teams = $rootScope.USER.teams\n      $scope.user = $rootScope.USER\n      get_team_info() if $rootScope.user.club_admin\n  \n      \n    $scope.create_event = ->\n      $scope.create_event_data.team_id = $scope.team.id\n      $scope.create_event_data.user_id = $rootScope.user.id\n      console.log $scope.create_event_data\n      $http(\n        method: 'POST'\n        url: \"#{ RESOURCES.DOMAIN }/event\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\",\n                  'Content-Type': 'application/json'\n                  }\n        data: $scope.create_event_data\n      ).then ( (res) ->\n        # console.log \"Create event response\"\n        alertify.success(\"Event created\")\n        console.log res.data\n        $scope.events = res.data\n      ), ( errResponse ) ->\n        console.log \"Create event error\"\n        alertify.error \"Create event failed\"\n        console.log errResponse\n\n\n    $scope.get_players_by_year = ( id ) ->\n      console.log \"Find by date\"\n      $http(\n        method: 'GET'\n        url: \"#{ RESOURCES.DOMAIN }/team/get-players-by-year/#{ $scope.team.id }\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n        # params:\n        #   team_id: id\n      ).then ( (res) ->\n         console.log \"Playsers by age response\"\n         console.log res\n         \n      ), ( errResponse ) ->\n        console.log \"DOwnload error #{ JSON.stringify errResponse }\"\n\n  \n    $scope.download = ->\n      $http(\n        method: 'GET'\n        url: \"#{ RESOURCES.DOMAIN }/user/download-file\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n        \n      ).then ( (res) ->\n         console.log \"Download response\"\n         console.log res\n         \n      ), ( errResponse ) ->\n        console.log \"DOwnload error #{ JSON.stringify errResponse }\"\n\n    $scope.update_members = ->\n      console.log \"team id #{ $scope.team.id }\"\n      console.log \"Team members array\"\n      console.log $scope.team_members_array\n      $http(\n        method: 'POST'\n        url: \"#{ RESOURCES.DOMAIN }/team/update-members/#{ $scope.team.id }\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\",\n                  'Content-Type': 'application/json'\n                  }\n\n        data:\n          team_members: $scope.team_members_array\n      ).then ( ( res ) ->\n        console.log \"Update team members\"\n        console.log res\n        $scope.team_members_array = res.data.team_members.map( ( member ) ->\n          member.id\n        )\n        # $('#select_player_modal').modal('hide')\n        alertify.success \"Team members updated successfully\"\n      ), ( errResponse ) ->\n        console.log \"Update team members error \"\n        console.log errResponse\n        alertify.error \"Failed to add team members\"\n\n    $scope.update_eligible_date = () ->\n      usSpinnerService.stop('spinner-1')\n      console.log $scope.team\n      $http(\n        method: 'POST'\n        url: \"#{ RESOURCES.DOMAIN }/team/update/#{ $scope.team.id }\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\",\n                  'Content-Type': 'application/json'\n                  }\n        data: $scope.team\n      ).then ( ( res ) ->\n        console.log \"Update team date\"\n        console.log res.data\n        $scope.team.eligible_date =  moment(res.data[0].eligible_date).format('YYYY-MM-DD')\n        $scope.team.eligible_date_end =  moment(res.data[0].eligible_date_end).format('YYYY-MM-DD')\n        get_org_and_members()\n        alertify.success \"Eligible date updated\"\n      ), ( errResponse ) ->\n        usSpinnerService.stop('spinner-1')\n        console.log \"Update date error \"\n        console.log errResponse\n        alertify.error \"Update failed\"\n\n    $('#select_player_modal').on 'shown.bs.modal', (e) -> #get team players when modal is opened\n      if $scope.team.eligible_date?\n        $scope.team.eligible_date = moment($scope.team.eligible_date).format('YYYY-MM-DD')\n        $scope.team.eligible_date_end = moment($scope.team.eligible_date_end).format('YYYY-MM-DD')\n        console.log $scope.team.eligible_date\n        get_org_and_members() #update eligible player list. \n      else\n        alertify.log(\"Please set the eligible date of this team. Click to dismiss\", \"\", 0)\n        \n      \n      \n      \n\n\n    get_org_and_members = -> #fetch org info with members. Only members under the teams eligible age. \n      console.log \"org id #{ $scope.team.main_org.id }\"\n      usSpinnerService.spin('spinner-1')\n      $http(\n        method: 'GET'\n        url: \"#{ RESOURCES.DOMAIN }/org/get-org-team-members/#{ $scope.team.main_org.id }\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\",\n                  'Content-Type': 'application/json'\n                  }\n        params: $scope.team\n      ).then ( ( res ) ->\n        console.log \"Get org info \"\n        console.log res.data\n        $scope.org_members = res.data.org.org_members\n        $scope.team_members_array = res.data.team.team_members.map( ( member ) ->\n            member.id ) #create array containing team members user.id\n        usSpinnerService.stop('spinner-1')\n        alertify.success \"Got players info\"\n      ), ( errResponse ) ->\n        console.log \"Get org info error \"\n        usSpinnerService.stop('spinner-1')\n        console.log errResponse\n        alertify.error \"Couldn't get players info\"\n    \n])\n\nreturn_team = ( teams, id ) ->\n  team = (team for team in teams when team.id is parseInt( id ))\n  console.log \"Team #{ JSON.stringify team }\"\n  return team\n\n #  $scope.members = res.data.team.team_members\n # $scope.events = res.data.team.events\n # $scope.files = res.data.bucket_info.Contents\n\n\n"]}