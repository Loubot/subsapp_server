{"version":3,"sources":["controllers/TeamController.coffee"],"names":[],"mappings":"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","file":"controllers/TeamController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\r\n\r\nangular.module('subzapp').controller('TeamController', [\r\n  '$scope'\r\n  '$rootScope'\r\n  '$state'\r\n  'COMMS'\r\n  '$window'\r\n  '$location'\r\n  'user'\r\n  'alertify'\r\n  'RESOURCES'\r\n  '$filter'\r\n  'uiGmapGoogleMapApi'\r\n  ( $scope, $rootScope, $state, COMMS, $window, $location, user, alertify, RESOURCES, $filter, uiGmapGoogleMapApi ) ->    \r\n    console.log 'Team Controller'\r\n    user_token = window.localStorage.getItem 'user_token'\r\n    $scope.location = null\r\n\r\n    get_team_info = ->\r\n\r\n      if $rootScope.USER.club_admin\r\n        COMMS.GET(\r\n          \"/team/get-team-info/#{ window.localStorage.getItem 'team_id' }\"          \r\n        ).then ( (res) ->\r\n          \r\n          console.log \"get_team_info response club admin\"\r\n          console.log res\r\n          $scope.team = res.data.team\r\n          $scope.org = res.data.org\r\n          $scope.org_members = res.data.org.org_members\r\n          $scope.locations = res.data.org.org_locations\r\n          \r\n        ), ( errResponse ) ->\r\n\r\n          console.log \"get_team_info error\"\r\n          console.log errResponse\r\n      else\r\n        COMMS.GET(\r\n          \"/team/#{ window.localStorage.getItem 'team_id' }\"\r\n        ).then ( (res) ->\r\n          \r\n          console.log \"Get team info response\"\r\n          console.log res.data\r\n          $scope.team = res.data\r\n\r\n           \r\n        ), ( errResponse ) ->\r\n\r\n          console.log \"Get team info error #{ JSON.stringify errResponse }\"\r\n          $state.go 'login'\r\n\r\n    if !($rootScope.USER?)\r\n      user.get_user().then ( (res) ->\r\n        # console.log \"User set to #{ JSON.stringify res }\"\r\n        # console.log \"TeamController teams #{ JSON.stringify window.USER }\"\r\n        $scope.user = $rootScope.USER\r\n\r\n        $scope.org = $rootScope.USER.org[0]\r\n\r\n        $scope.teams = $rootScope.USER.teams\r\n        return_team( $rootScope.USER.teams, $location.search().id )\r\n        $scope.show_upload = $rootScope.USER.club_admin\r\n        get_team_info() if $rootScope.USER.club_admin\r\n      ), ( errResponse ) ->\r\n        $rootScope.USER = null\r\n        # $state.go 'login'\r\n    else\r\n      console.log \"USER already defined\"\r\n      $scope.user = $rootScope.USER\r\n      $scope.org = $rootScope.USER.org[0]\r\n      $scope.teams = $rootScope.USER.teams\r\n      $scope.user = $rootScope.USER\r\n      get_team_info() if $rootScope.USER.club_admin\r\n  \r\n      \r\n    $scope.create_event = ->\r\n      $scope.create_event_data.team_id = $scope.team.id\r\n      $scope.create_event_data.user_id = $rootScope.USER.id\r\n      $scope.create_event_data.event_team = $scope.team.id\r\n      if isNaN( $scope.create_event_data.location_id )\r\n        console.log \"Not a number\"\r\n        alertify.error \"You must select a location\"\r\n        return false\r\n\r\n      console.log $scope.create_event_data\r\n      COMMS.POST(\r\n        \"/event\"\r\n        $scope.create_event_data\r\n      ).then ( (res) ->\r\n        # console.log \"Create event response\"\r\n        alertify.success(\"Event created\")\r\n        console.log res.data\r\n        $scope.events = res.data\r\n      ), ( errResponse ) ->\r\n        console.log \"Create event error\"\r\n        alertify.error \"Create event failed\"\r\n        console.log errResponse\r\n\r\n\r\n    $scope.get_players_by_year = ( id ) ->\r\n      console.log \"Find by date\"\r\n      COMMS.GET(\r\n        \"/team/get-players-by-year/#{ $scope.team.id }\"\r\n        # params:\r\n        #   team_id: id\r\n      ).then ( (res) ->\r\n         console.log \"Playsers by age response\"\r\n         console.log res\r\n         \r\n      ), ( errResponse ) ->\r\n        console.log \"DOwnload error #{ JSON.stringify errResponse }\"\r\n\r\n  \r\n    $scope.download = ->\r\n      COMMS.GET(\r\n        \"/user/download-file\"\r\n      ).then ( (res) ->\r\n         console.log \"Download response\"\r\n         console.log res\r\n         \r\n      ), ( errResponse ) ->\r\n        console.log \"DOwnload error #{ JSON.stringify errResponse }\"\r\n\r\n    $scope.update_members = ->\r\n      console.log \"team id #{ $scope.team.id }\"\r\n      console.log \"Team members array\"\r\n      console.log $scope.team_members_array\r\n      COMMS.POST(\r\n        \"/team/update-members/#{ $scope.team.id }\"\r\n        team_members: $scope.team_members_array\r\n      ).then ( ( res ) ->\r\n        console.log \"Update team members\"\r\n        console.log res\r\n        $scope.team_members_array = res.data.team_members.map( ( member ) ->\r\n          member.id\r\n        )\r\n        # $('#select_player_modal').modal('hide')\r\n        alertify.success \"Team members updated successfully\"\r\n      ), ( errResponse ) ->\r\n        console.log \"Update team members error \"\r\n        console.log errResponse\r\n        alertify.error \"Failed to add team members\"\r\n\r\n    $scope.update_eligible_date = () ->\r\n      \r\n      console.log $scope.team\r\n      COMMS.POST(\r\n        \"/team/update/#{ $scope.team.id }\"\r\n        $scope.team\r\n      ).then ( ( res ) ->\r\n        console.log \"Update team date\"\r\n        console.log res.data\r\n        $scope.team.eligible_date =  moment(res.data[0].eligible_date).format('YYYY-MM-DD')\r\n        $scope.team.eligible_date_end =  moment(res.data[0].eligible_date_end).format('YYYY-MM-DD')\r\n        get_org_and_members()\r\n        alertify.success \"Eligible date updated\"\r\n      ), ( errResponse ) ->\r\n       \r\n        console.log \"Update date error \"\r\n        console.log errResponse\r\n        alertify.error \"Update failed\"\r\n\r\n    $('#select_player_modal').on 'shown.bs.modal', (e) -> #get team players when modal is opened\r\n      if $scope.team.eligible_date?\r\n        $scope.team.eligible_date = moment($scope.team.eligible_date).format('YYYY-MM-DD')\r\n        $scope.team.eligible_date_end = moment($scope.team.eligible_date_end).format('YYYY-MM-DD')\r\n        console.log $scope.team.eligible_date\r\n        get_org_and_members() #update eligible player list. \r\n      else\r\n        alertify.log(\"Please set the eligible date of this team. Click to dismiss\", \"\", 0)\r\n        \r\n      \r\n      \r\n      \r\n\r\n\r\n    get_org_and_members = -> #fetch org info with members. Only members under the teams eligible age. \r\n      console.log \"org id #{ $scope.team.main_org.id }\"\r\n      \r\n      COMMS.GET(\r\n        \"/org/get-org-team-members/#{ $scope.team.main_org.id }\"\r\n        $scope.team\r\n      ).then ( ( res ) ->\r\n        console.log \"Get org info \"\r\n        console.log res.data\r\n        $scope.org_members = res.data.org.org_members\r\n        $scope.team_members_array = res.data.team.team_members.map( ( member ) ->\r\n            member.id ) #create array containing team members user.id\r\n        \r\n        alertify.success \"Got players info\"\r\n      ), ( errResponse ) ->\r\n        console.log \"Get org info error \"\r\n        \r\n        console.log errResponse\r\n        alertify.error \"Couldn't get players info\"\r\n\r\n    ###########################################\r\n    #               Map stuff                 #\r\n    #                                         #\r\n    ###########################################\r\n\r\n    set_map = ( lat, lng, set_markers, zoom ) -> # set map to new center/ possibly with marker\r\n      if !( zoom )?\r\n        zoom = 11\r\n\r\n      if !( $scope.map ) #define a new map        \r\n        $scope.map = \r\n          center:\r\n            latitude: lat\r\n            longitude: lng\r\n          zoom: zoom\r\n          markers: []\r\n\r\n      else\r\n        $scope.map.center = \r\n          latitude: lat\r\n          longitude: lng\r\n        $scope.map.zoom = zoom    \r\n\r\n      console.log $scope.map\r\n\r\n      if set_markers\r\n        $scope.map.markers = new Array()\r\n        console.log \"setting markers\"\r\n        marker =\r\n          idKey: Date.now()\r\n          coords:\r\n            latitude: lat\r\n            longitude: lng\r\n        $scope.map.markers.push( marker )\r\n        $scope.$apply()\r\n\r\n      $scope.map.events = # map events. see google maps api for more info\r\n        dragend: ( point ) ->  # event fired after map drag\r\n          console.log 'yep'\r\n          $scope.map.center = \r\n            latitude: point.center.lat()\r\n            longitude: point.center.lng()\r\n          set_map( point.center.lat(), point.center.lng(), true, $scope.map.zoom )\r\n\r\n          # console.log point\r\n          \r\n      console.log \"center #{ JSON.stringify $scope.map.center }\"\r\n\r\n    $scope.find_address = -> # event triggered after user has stopped typing for a second. Debounce set on html element\r\n      geocoder = new google.maps.Geocoder() # geocode address to lat/lng coordinate\r\n      console.log \"Address #{ $scope.map.address }\"\r\n      geocoder.geocode( address: $scope.map.address, ( results, status ) ->\r\n        $scope.map.markers = []\r\n        # console.log \"results \"\r\n        console.log results\r\n        # console.log \"Status #{ JSON.stringify status }\"\r\n\r\n        set_map( results[0].geometry.location.lat(), results[0].geometry.location.lng() , true, 15 )\r\n        \r\n        \r\n          \r\n      )\r\n\r\n    $scope.new_location = ->\r\n      if 'new_location' == $scope.create_event_data.location_id\r\n        $('#add_locations').modal 'show'\r\n        return true\r\n\r\n    $('#add_locations').on 'shown.bs.modal', ->\r\n      $scope.show_map = true\r\n      set_map( 51.9181688, -8.5039876, false )\r\n      $scope.$apply()\r\n\r\n    $scope.save_address = -> # event triggered when user clicks save address button. \r\n      console.log \"Save address\"\r\n      console.log $scope.map\r\n      $scope.map.user_id = $rootScope.USER.id\r\n      $scope.map.org_id = $scope.org.id\r\n      COMMS.POST( \r\n        '/location', $scope.map \r\n      ).then ( ( res ) ->\r\n        console.log \"Save adddres response\"\r\n        alertify.success \"Adddres saved\"\r\n        console.log res.data\r\n        $scope.locations = res.data.org_locations\r\n        # $scope.parsed_data = res\r\n      ), ( errResponse ) ->\r\n        console.log \"Save address error\"\r\n        console.log errResponse\r\n        alertify.error errResponse.data\r\n      \r\n      \r\n\r\n    $scope.onTimeSet = ( nd, od ) ->\r\n      $scope.create_event_data.start_date = moment( nd ).format( 'DD-MM-YYYY HH:mm' )\r\n      $scope.create_event_data.end_date = moment( nd ).add( 2, 'hours' ).format( 'DD-MM-YYYY HH:mm' )\r\n      \r\n\r\n])\r\n\r\nreturn_team = ( teams, id ) ->\r\n  team = (team for team in teams when team.id is parseInt( id ))\r\n  console.log \"Team #{ JSON.stringify team }\"\r\n  return team"]}