{"version":3,"sources":["controllers/TeamController.coffee"],"names":[],"mappings":"AAAA;AAAA,IAAA;;AAEA,OAAO,CAAC,MAAR,CAAe,SAAf,CAAyB,CAAC,UAA1B,CAAqC,gBAArC,EAAuD;EACrD,QADqD,EAErD,YAFqD,EAGrD,QAHqD,EAIrD,OAJqD,EAKrD,SALqD,EAMrD,WANqD,EAOrD,MAPqD,EAQrD,UARqD,EASrD,WATqD,EAUrD,SAVqD,EAWrD,oBAXqD,EAYrD,SAAE,MAAF,EAAU,UAAV,EAAsB,MAAtB,EAA8B,KAA9B,EAAqC,OAArC,EAA8C,SAA9C,EAAyD,IAAzD,EAA+D,QAA/D,EAAyE,SAAzE,EAAoF,OAApF,EAA6F,kBAA7F;AACE,QAAA;IAAA,OAAO,CAAC,GAAR,CAAY,iBAAZ;IACA,UAAA,GAAa,MAAM,CAAC,YAAY,CAAC,OAApB,CAA4B,YAA5B;IACb,MAAM,CAAC,iBAAP,GAA2B;IAC3B,MAAM,CAAC,QAAP,GAAkB;IAClB,MAAM,CAAC,OAAP,GAAqB,IAAA,KAAA,CAAA;IACrB,aAAA,GAAgB,SAAA;MAEd,KAAK,CAAC,GAAN,CACE,YADF,CAEC,CAAC,IAFF,CAEO,CAAE,SAAE,SAAF;QACP,OAAO,CAAC,GAAR,CAAY,eAAZ;QACA,OAAO,CAAC,GAAR,CAAY,SAAZ;QACA,QAAQ,CAAC,OAAT,CAAiB,eAAjB;eACA,MAAM,CAAC,SAAP,GAAmB,SAAS,CAAC;MAJtB,CAAF,CAFP,EAOG,SAAE,WAAF;QACD,OAAO,CAAC,GAAR,CAAY,yBAAZ;eACA,QAAQ,CAAC,KAAT,CAAe,yBAAf;MAFC,CAPH;MAWA,IAAG,UAAU,CAAC,IAAI,CAAC,UAAnB;eACE,KAAK,CAAC,GAAN,CACE,sBAAA,GAAsB,CAAE,MAAM,CAAC,YAAY,CAAC,OAApB,CAA4B,SAA5B,CAAF,CADxB,CAEC,CAAC,IAFF,CAEO,CAAE,SAAC,GAAD;UAEP,OAAO,CAAC,GAAR,CAAY,mCAAZ;UACA,OAAO,CAAC,GAAR,CAAY,GAAZ;UACA,MAAM,CAAC,IAAP,GAAc,GAAG,CAAC,IAAI,CAAC;UACvB,MAAM,CAAC,GAAP,GAAa,GAAG,CAAC,IAAI,CAAC;iBAEtB,MAAM,CAAC,WAAP,GAAqB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;QAP3B,CAAF,CAFP,EAWG,SAAE,WAAF;UAED,OAAO,CAAC,GAAR,CAAY,qBAAZ;iBACA,OAAO,CAAC,GAAR,CAAY,WAAZ;QAHC,CAXH,EADF;OAAA,MAAA;QAiBE,OAAO,CAAC,GAAR,CAAY,QAAZ;eACA,KAAK,CAAC,GAAN,CACE,QAAA,GAAQ,CAAE,MAAM,CAAC,YAAY,CAAC,OAApB,CAA4B,SAA5B,CAAF,CADV,CAEC,CAAC,IAFF,CAEO,CAAE,SAAC,GAAD;UAEP,OAAO,CAAC,GAAR,CAAY,wBAAZ;UACA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,IAAhB;UACA,MAAM,CAAC,IAAP,GAAc,GAAG,CAAC;UAClB,MAAM,CAAC,GAAP,GAAa,GAAG,CAAC,IAAI,CAAC;iBACtB,QAAQ,CAAC,OAAT,CAAiB,eAAjB;QANO,CAAF,CAFP,EAWG,SAAE,WAAF;UAED,OAAO,CAAC,GAAR,CAAY,sBAAA,GAAsB,CAAE,IAAI,CAAC,SAAL,CAAe,WAAf,CAAF,CAAlC;UACA,QAAQ,CAAC,KAAT,CAAe,yBAAf;iBACA,MAAM,CAAC,EAAP,CAAU,OAAV;QAJC,CAXH,EAlBF;;IAbc;IAgDhB,IAAG,CAAC,CAAC,uBAAD,CAAJ;MACE,IAAI,CAAC,QAAL,CAAA,CAAe,CAAC,IAAhB,CAAqB,CAAE,SAAC,GAAD;QAGrB,MAAM,CAAC,IAAP,GAAc,UAAU,CAAC;QAEzB,MAAM,CAAC,GAAP,GAAa,UAAU,CAAC,IAAI,CAAC,GAAI,CAAA,CAAA;QAEjC,MAAM,CAAC,KAAP,GAAe,UAAU,CAAC,IAAI,CAAC;QAC/B,WAAA,CAAa,UAAU,CAAC,IAAI,CAAC,KAA7B,EAAoC,SAAS,CAAC,MAAV,CAAA,CAAkB,CAAC,EAAvD;QACA,MAAM,CAAC,WAAP,GAAqB,UAAU,CAAC,IAAI,CAAC;eACrC,aAAA,CAAA;MAVqB,CAAF,CAArB,EAWG,SAAE,WAAF;QACD,UAAU,CAAC,IAAX,GAAkB;eAClB,MAAM,CAAC,EAAP,CAAU,OAAV;MAFC,CAXH,EADF;KAAA,MAAA;MAgBE,OAAO,CAAC,GAAR,CAAY,sBAAZ;MACA,MAAM,CAAC,IAAP,GAAc,UAAU,CAAC;MACzB,MAAM,CAAC,GAAP,GAAa,UAAU,CAAC,IAAI,CAAC,GAAI,CAAA,CAAA;MACjC,MAAM,CAAC,KAAP,GAAe,UAAU,CAAC,IAAI,CAAC;MAC/B,MAAM,CAAC,IAAP,GAAc,UAAU,CAAC;MACzB,IAAmB,UAAU,CAAC,IAAI,CAAC,UAAnC;QAAA,aAAA,CAAA,EAAA;OArBF;;IAwBA,MAAM,CAAC,YAAP,GAAsB,SAAA;MACpB,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,iBAAnB;MACA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,iBAAtB,CAAZ;MACA,MAAM,CAAC,iBAAiB,CAAC,OAAzB,GAAmC,MAAM,CAAC,IAAI,CAAC;MAC/C,MAAM,CAAC,iBAAiB,CAAC,OAAzB,GAAmC,UAAU,CAAC,IAAI,CAAC;MACnD,MAAM,CAAC,iBAAiB,CAAC,UAAzB,GAAsC,MAAM,CAAC,IAAI,CAAC;MAClD,IAAG,MAAM,CAAC,iBAAP,KAA4B,OAA/B;QACE,OAAO,CAAC,GAAR,CAAY,KAAZ;QACA,OAAO,MAAM,CAAC,iBAAiB,CAAC,cAFlC;;MAGA,OAAO,CAAC,GAAR,CAAY,QAAZ;MACA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,iBAAtB,CAAZ;MACA,IAAG,KAAA,CAAO,MAAM,CAAC,iBAAiB,CAAC,WAAhC,CAAH;QACE,OAAO,CAAC,GAAR,CAAY,cAAZ;QACA,QAAQ,CAAC,KAAT,CAAe,4BAAf;AACA,eAAO,MAHT;;MAKA,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,iBAAnB;aACA,KAAK,CAAC,IAAN,CACE,QADF,EAEE,MAAM,CAAC,iBAFT,CAGC,CAAC,IAHF,CAGO,CAAE,SAAC,GAAD;QAEP,QAAQ,CAAC,OAAT,CAAiB,eAAjB;QACA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,IAAhB;eACA,MAAM,CAAC,MAAP,GAAgB,GAAG,CAAC;MAJb,CAAF,CAHP,EAQG,SAAE,WAAF;QACD,OAAO,CAAC,GAAR,CAAY,oBAAZ;QACA,QAAQ,CAAC,KAAT,CAAe,qBAAf;eACA,OAAO,CAAC,GAAR,CAAY,WAAZ;MAHC,CARH;IAjBoB;IA+BtB,MAAM,CAAC,mBAAP,GAA6B,SAAE,EAAF;MAC3B,OAAO,CAAC,GAAR,CAAY,cAAZ;aACA,KAAK,CAAC,GAAN,CACE,4BAAA,GAA8B,MAAM,CAAC,IAAI,CAAC,EAD5C,CAIC,CAAC,IAJF,CAIO,CAAE,SAAC,GAAD;QACN,OAAO,CAAC,GAAR,CAAY,0BAAZ;eACA,OAAO,CAAC,GAAR,CAAY,GAAZ;MAFM,CAAF,CAJP,EAQG,SAAE,WAAF;eACD,OAAO,CAAC,GAAR,CAAY,iBAAA,GAAiB,CAAE,IAAI,CAAC,SAAL,CAAe,WAAf,CAAF,CAA7B;MADC,CARH;IAF2B;IAc7B,MAAM,CAAC,QAAP,GAAkB,SAAA;aAChB,KAAK,CAAC,GAAN,CACE,qBADF,CAEC,CAAC,IAFF,CAEO,CAAE,SAAC,GAAD;QACN,OAAO,CAAC,GAAR,CAAY,mBAAZ;eACA,OAAO,CAAC,GAAR,CAAY,GAAZ;MAFM,CAAF,CAFP,EAMG,SAAE,WAAF;eACD,OAAO,CAAC,GAAR,CAAY,iBAAA,GAAiB,CAAE,IAAI,CAAC,SAAL,CAAe,WAAf,CAAF,CAA7B;MADC,CANH;IADgB;IAUlB,MAAM,CAAC,cAAP,GAAwB,SAAA;MACtB,OAAO,CAAC,GAAR,CAAY,UAAA,GAAY,MAAM,CAAC,IAAI,CAAC,EAApC;MACA,OAAO,CAAC,GAAR,CAAY,oBAAZ;MACA,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,kBAAnB;aACA,KAAK,CAAC,IAAN,CACE,uBAAA,GAAyB,MAAM,CAAC,IAAI,CAAC,EADvC,EAEE;QAAA,YAAA,EAAc,MAAM,CAAC,kBAArB;OAFF,CAGC,CAAC,IAHF,CAGO,CAAE,SAAE,GAAF;QACP,OAAO,CAAC,GAAR,CAAY,qBAAZ;QACA,OAAO,CAAC,GAAR,CAAY,GAAZ;QACA,MAAM,CAAC,IAAP,GAAc,GAAG,CAAC;QAClB,MAAM,CAAC,kBAAP,GAA4B,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAtB,CAA2B,SAAE,MAAF;iBACrD,MAAM,CAAC;QAD8C,CAA3B;eAI5B,QAAQ,CAAC,OAAT,CAAiB,mCAAjB;MARO,CAAF,CAHP,EAYG,SAAE,WAAF;QACD,OAAO,CAAC,GAAR,CAAY,4BAAZ;QACA,OAAO,CAAC,GAAR,CAAY,WAAZ;eACA,QAAQ,CAAC,KAAT,CAAe,4BAAf;MAHC,CAZH;IAJsB;IAqBxB,MAAM,CAAC,oBAAP,GAA8B,SAAA;MAE5B,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,IAAnB;aACA,KAAK,CAAC,IAAN,CACE,eAAA,GAAiB,MAAM,CAAC,IAAI,CAAC,EAD/B,EAEE,MAAM,CAAC,IAFT,CAGC,CAAC,IAHF,CAGO,CAAE,SAAE,GAAF;QACP,OAAO,CAAC,GAAR,CAAY,kBAAZ;QACA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,IAAhB;QACA,MAAM,CAAC,IAAI,CAAC,aAAZ,GAA6B,MAAA,CAAO,GAAG,CAAC,IAAK,CAAA,CAAA,CAAE,CAAC,aAAnB,CAAiC,CAAC,MAAlC,CAAyC,YAAzC;QAC7B,MAAM,CAAC,IAAI,CAAC,iBAAZ,GAAiC,MAAA,CAAO,GAAG,CAAC,IAAK,CAAA,CAAA,CAAE,CAAC,iBAAnB,CAAqC,CAAC,MAAtC,CAA6C,YAA7C;QACjC,mBAAA,CAAA;eACA,QAAQ,CAAC,OAAT,CAAiB,uBAAjB;MANO,CAAF,CAHP,EAUG,SAAE,WAAF;QAED,OAAO,CAAC,GAAR,CAAY,oBAAZ;QACA,OAAO,CAAC,GAAR,CAAY,WAAZ;eACA,QAAQ,CAAC,KAAT,CAAe,eAAf;MAJC,CAVH;IAH4B;IAmB9B,CAAA,CAAE,sBAAF,CAAyB,CAAC,EAA1B,CAA6B,gBAA7B,EAA+C,SAAC,CAAD;MAC7C,IAAG,iCAAH;QACE,MAAM,CAAC,IAAI,CAAC,aAAZ,GAA4B,MAAA,CAAO,MAAM,CAAC,IAAI,CAAC,aAAnB,CAAiC,CAAC,MAAlC,CAAyC,YAAzC;QAC5B,MAAM,CAAC,IAAI,CAAC,iBAAZ,GAAgC,MAAA,CAAO,MAAM,CAAC,IAAI,CAAC,iBAAnB,CAAqC,CAAC,MAAtC,CAA6C,YAA7C;QAChC,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,IAAI,CAAC,aAAxB;eACA,mBAAA,CAAA,EAJF;OAAA,MAAA;eAME,QAAQ,CAAC,GAAT,CAAa,6DAAb,EAA4E,EAA5E,EAAgF,CAAhF,EANF;;IAD6C,CAA/C;IAcA,mBAAA,GAAsB,SAAA;MACpB,OAAO,CAAC,GAAR,CAAY,SAAA,GAAW,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAA5C;MAEA,IAAG,UAAU,CAAC,IAAI,CAAC,UAAnB;QACE,OAAO,CAAC,GAAR,CAAY,+BAAZ;eACA,KAAK,CAAC,GAAN,CACE,4BAAA,GAA8B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EADrD,EAEE,MAAM,CAAC,IAFT,CAGC,CAAC,IAHF,CAGO,CAAE,SAAE,GAAF;UACP,OAAO,CAAC,GAAR,CAAY,eAAZ;UACA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,IAAhB;UACA,MAAM,CAAC,WAAP,GAAqB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;UAClC,MAAM,CAAC,kBAAP,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAA3B,CAAgC,SAAE,MAAF;mBACxD,MAAM,CAAC;UADiD,CAAhC;iBAG5B,QAAQ,CAAC,OAAT,CAAiB,kBAAjB;QAPO,CAAF,CAHP,EAWG,SAAE,WAAF;UACD,OAAO,CAAC,GAAR,CAAY,qBAAZ;UAEA,OAAO,CAAC,GAAR,CAAY,WAAZ;iBACA,QAAQ,CAAC,KAAT,CAAe,2BAAf;QAJC,CAXH,EAFF;OAAA,MAAA;eAmBE,KAAK,CAAC,GAAN,CACE,oBAAA,GAAsB,MAAM,CAAC,IAAI,CAAC,EADpC,EAEE,MAAM,CAAC,IAFT,CAGC,CAAC,IAHF,CAGO,CAAE,SAAE,GAAF;UACP,OAAO,CAAC,GAAR,CAAY,iBAAZ;UACA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,IAAhB;UACA,MAAM,CAAC,WAAP,GAAqB,GAAG,CAAC;iBACzB,MAAM,CAAC,kBAAP,GAA4B,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAzB,CAA6B,SAAE,MAAF;mBACvD,MAAM,CAAC;UADgD,CAA7B;QAJrB,CAAF,CAHP,EASG,SAAE,WAAF;UAED,OAAO,CAAC,GAAR,CAAY,uBAAZ;UACA,OAAO,CAAC,GAAR,CAAY,WAAZ;iBACA,QAAQ,CAAC,KAAT,CAAe,6BAAf;QAJC,CATH,EAnBF;;IAHoB;IA0CtB,OAAA,GAAU,SAAE,GAAF,EAAO,GAAP,EAAY,WAAZ,EAAyB,IAAzB;AACR,UAAA;MAAA,IAAI,YAAJ;QACE,IAAA,GAAO,GADT;;AAIA;AAAA,WAAA,qCAAA;;QACE,MAAM,CAAC,MAAP,CAAe,IAAf;AADF;MAEA,MAAM,CAAC,OAAP,GAAqB,IAAA,KAAA,CAAA;MAKrB,MAAM,CAAC,GAAG,CAAC,OAAX,CAAoB,IAApB;MAOA,IAAG,WAAH;QACE,MAAA,GAAa,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CACX;UAAA,QAAA,EACE;YAAA,GAAA,EAAK,GAAL;YACA,GAAA,EAAK,GADL;WADF;UAGA,KAAA,EAAO,cAHP;SADW;QAKb,MAAM,CAAC,OAAO,CAAC,IAAf,CAAoB,MAApB;QAEA,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,GAArB,EARF;;aAcA,OAAO,CAAC,GAAR,CAAY,SAAA,GAAS,CAAE,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,GAAG,CAAC,MAA1B,CAAF,CAArB;IAjCQ;IAmCV,MAAM,CAAC,YAAP,GAAsB,SAAA;AACpB,UAAA;MAAA,QAAA,GAAe,IAAA,MAAM,CAAC,IAAI,CAAC,QAAZ,CAAA;MACf,OAAO,CAAC,GAAR,CAAY,UAAA,GAAY,MAAM,CAAC,GAAG,CAAC,OAAnC;aACA,QAAQ,CAAC,OAAT,CAAkB;QAAA,OAAA,EAAS,MAAM,CAAC,QAAQ,CAAC,OAAzB;OAAlB,EAAoD,SAAE,OAAF,EAAW,MAAX;QAClD,OAAO,CAAC,GAAR,CAAY,OAAZ;QACA,MAAM,CAAC,GAAG,CAAC,OAAX,GAAqB;QAErB,OAAO,CAAC,GAAR,CAAY,OAAZ;eAGA,OAAA,CAAS,OAAQ,CAAA,CAAA,CAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAA7B,CAAA,CAAT,EAA6C,OAAQ,CAAA,CAAA,CAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAA7B,CAAA,CAA7C,EAAkF,IAAlF,EAAwF,EAAxF;MAPkD,CAApD;IAHoB;IAgBtB,MAAM,CAAC,YAAP,GAAsB,SAAA;MACpB,IAAG,cAAA,KAAkB,MAAM,CAAC,iBAAiB,CAAC,WAA9C;QACE,CAAA,CAAE,gBAAF,CAAmB,CAAC,KAApB,CAA0B,MAA1B;AACA,eAAO,KAFT;;IADoB;IAKtB,kBAAkB,CAAC,IAAnB,CAAwB,SAAC,IAAD;MACtB,MAAM,CAAC,GAAP,GAAiB,IAAC,MAAM,CAAC,IAAI,CAAC,GAAb,CAAkB,QAAQ,CAAC,cAAT,CAAwB,eAAxB,CAAlB,EACf;QAAA,MAAA,EACE;UAAA,GAAA,EAAK,UAAL;UACA,GAAA,EAAK,CAAC,SADN;SADF;QAGA,IAAA,EAAM,CAHN;OADe;aAKjB,MAAM,CAAC,OAAP,GAAqB,IAAA,KAAA,CAAA;IANC,CAAxB;IAQA,CAAA,CAAG,QAAH,CAAa,CAAC,EAAd,CAAiB,gBAAjB,EAAmC,gBAAnC,EAAqD,SAAA;MAMnD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAlB,CAA0B,MAAM,CAAC,GAAjC,EAAsC,QAAtC;aAEA,MAAM,CAAC,GAAG,CAAC,WAAX,CAAuB,OAAvB,EAAgC,SAAE,CAAF;QAC9B,MAAM,CAAC,QAAQ,CAAC,GAAhB,GAAsB,CAAC,CAAC,MAAM,CAAC,GAAT,CAAA;QACtB,MAAM,CAAC,QAAQ,CAAC,GAAhB,GAAsB,CAAC,CAAC,MAAM,CAAC,GAAT,CAAA;eACtB,OAAA,CAAS,CAAC,CAAC,MAAM,CAAC,GAAT,CAAA,CAAT,EAAyB,CAAC,CAAC,MAAM,CAAC,GAAT,CAAA,CAAzB,EAAyC,IAAzC,EAA+C,MAAM,CAAC,GAAG,CAAC,IAA1D;MAH8B,CAAhC;IARmD,CAArD;IAaA,MAAM,CAAC,YAAP,GAAsB,SAAA;MACpB,OAAO,CAAC,GAAR,CAAY,cAAZ;MACA,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,QAAnB;MACA,MAAM,CAAC,QAAQ,CAAC,OAAhB,GAA0B,UAAU,CAAC,IAAI,CAAC;MAC1C,MAAM,CAAC,QAAQ,CAAC,MAAhB,GAAyB,MAAM,CAAC,GAAG,CAAC;aACpC,KAAK,CAAC,IAAN,CACE,WADF,EACe,MAAM,CAAC,QADtB,CAEC,CAAC,IAFF,CAEO,CAAE,SAAE,GAAF;QACP,OAAO,CAAC,GAAR,CAAY,uBAAZ;QACA,QAAQ,CAAC,OAAT,CAAiB,eAAjB;QACA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,IAAhB;QACA,MAAM,CAAC,SAAP,GAAmB,GAAG,CAAC,IAAI,CAAC;eAC5B,CAAA,CAAE,gBAAF,CAAmB,CAAC,KAApB,CAA0B,MAA1B;MALO,CAAF,CAFP,EASG,SAAE,WAAF;QACD,OAAO,CAAC,GAAR,CAAY,oBAAZ;eAEA,QAAQ,CAAC,KAAT,CAAe,WAAW,CAAC,IAA3B;MAHC,CATH;IALoB;IAoBtB,MAAM,CAAC,mBAAP,GAA6B;IAC7B,MAAM,CAAC,cAAP,GAAwB,SAAA;MACtB,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,mBAAnB;aACA,KAAK,CAAC,IAAN,CACE,iBADF,EAEE;QAAE,MAAA,EAAQ,MAAM,CAAC,GAAG,CAAC,EAArB;QAEA,OAAA,EAAS,MAAM,CAAC,IAAI,CAAC,EAFrB;QAGA,aAAA,EAAe,MAAM,CAAC,IAAI,CAAC,EAH3B;QAIA,gBAAA,EAAkB,MAAM,CAAC,IAAI,CAAC,KAJ9B;QAKA,aAAA,EAAe,MAAM,CAAC,mBAAmB,CAAC,aAL1C;QAMA,aAAA,EAAe,MAAM,CAAC,GAAG,CAAC,IAN1B;QAOA,SAAA,EAAW,MAAM,CAAC,IAAI,CAAC,IAPvB;OAFF,CAWC,CAAC,IAXF,CAWO,CAAE,SAAE,QAAF;QACP,OAAO,CAAC,GAAR,CAAY,kBAAZ;QACA,OAAO,CAAC,GAAR,CAAY,QAAZ;QACA,QAAQ,CAAC,OAAT,CAAiB,gBAAjB;eACA,CAAA,CAAE,iBAAF,CAAoB,CAAC,KAArB,CAA2B,MAA3B;MAJO,CAAF,CAXP,EAgBG,SAAE,WAAF;QACD,OAAO,CAAC,GAAR,CAAY,kBAAZ;QACA,OAAO,CAAC,GAAR,CAAY,WAAZ;eACA,QAAQ,CAAC,KAAT,CAAe,WAAW,CAAC,OAA3B;MAHC,CAhBH;IAFsB;WAyBxB,MAAM,CAAC,SAAP,GAAmB,SAAE,EAAF,EAAM,EAAN;MACjB,MAAM,CAAC,iBAAiB,CAAC,UAAzB,GAAsC,MAAA,CAAQ,EAAR,CAAY,CAAC,MAAb,CAAqB,kBAArB;MACtC,MAAM,CAAC,iBAAiB,CAAC,aAAzB,GAAyC,MAAA,CAAQ,EAAR,CAAY,CAAC,GAAb,CAAkB,CAAlB,EAAqB,OAArB,CAA8B,CAAC,MAA/B,CAAuC,kBAAvC;aACzC,MAAM,CAAC,iBAAiB,CAAC,QAAzB,GAAoC,MAAA,CAAQ,EAAR,CAAY,CAAC,GAAb,CAAkB,CAAlB,EAAqB,OAArB,CAA8B,CAAC,MAA/B,CAAuC,kBAAvC;IAHnB;EAhWrB,CAZqD;CAAvD;;AAqXA,WAAA,GAAc,SAAE,KAAF,EAAS,EAAT;AACZ,MAAA;EAAA,IAAA;;AAAQ;SAAA,uCAAA;;UAA4B,IAAI,CAAC,EAAL,KAAW,QAAA,CAAU,EAAV;sBAAvC;;AAAA;;;EACR,OAAO,CAAC,GAAR,CAAY,OAAA,GAAO,CAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CAAF,CAAnB;AACA,SAAO;AAHK","file":"controllers/TeamController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\n\nangular.module('subzapp').controller('TeamController', [\n  '$scope'\n  '$rootScope'\n  '$state'\n  'COMMS'\n  '$window'\n  '$location'\n  'user'\n  'alertify'\n  'RESOURCES'\n  '$filter'\n  'uiGmapGoogleMapApi'\n  ( $scope, $rootScope, $state, COMMS, $window, $location, user, alertify, RESOURCES, $filter, uiGmapGoogleMapApi ) ->    \n    console.log 'Team Controller'\n    user_token = window.localStorage.getItem 'user_token'\n    $scope.training_or_match = 'disabled'\n    $scope.location = {}\n    $scope.markers = new Array()\n    get_team_info = ->\n\n      COMMS.GET(\n        \"/locations\"\n      ).then ( ( locations ) -> \n        console.log \"Got locations\"\n        console.log locations\n        alertify.success \"Got locations\"\n        $scope.locations = locations.data\n      ), ( errResponse ) ->\n        console.log \"Failed to get locations\"\n        alertify.error \"Failed to get locations\"\n\n      if $rootScope.USER.club_admin\n        COMMS.GET(\n          \"/team/get-team-info/#{ window.localStorage.getItem 'team_id' }\"          \n        ).then ( (res) ->\n          \n          console.log \"get_team_info response club admin\"\n          console.log res\n          $scope.team = res.data.team\n          $scope.org = res.data.org\n\n          $scope.org_members = res.data.org.org_members\n          \n        ), ( errResponse ) ->\n\n          console.log \"get_team_info error\"\n          console.log errResponse\n      else\n        console.log 'helllo'\n        COMMS.GET(\n          \"/team/#{ window.localStorage.getItem 'team_id' }\"\n        ).then ( (res) ->\n          \n          console.log \"Get team info response\"\n          console.log res.data\n          $scope.team = res.data\n          $scope.org = res.data.main_org\n          alertify.success \"Got team info\"\n\n           \n        ), ( errResponse ) ->\n\n          console.log \"Get team info error #{ JSON.stringify errResponse }\"\n          alertify.error \"Failed to get team info\"\n          $state.go 'login'\n\n    if !($rootScope.USER?)\n      user.get_user().then ( (res) ->\n        # console.log \"User set to #{ JSON.stringify res }\"\n        # console.log \"TeamController teams #{ JSON.stringify window.USER }\"\n        $scope.user = $rootScope.USER\n\n        $scope.org = $rootScope.USER.org[0]\n\n        $scope.teams = $rootScope.USER.teams\n        return_team( $rootScope.USER.teams, $location.search().id )\n        $scope.show_upload = $rootScope.USER.club_admin\n        get_team_info() \n      ), ( errResponse ) ->\n        $rootScope.USER = null\n        $state.go 'login'\n    else\n      console.log \"USER already defined\"\n      $scope.user = $rootScope.USER\n      $scope.org = $rootScope.USER.org[0]\n      $scope.teams = $rootScope.USER.teams\n      $scope.user = $rootScope.USER\n      get_team_info() if $rootScope.USER.club_admin\n  \n      \n    $scope.create_event = ->\n      console.log $scope.training_or_match\n      console.log JSON.stringify $scope.create_event_data\n      $scope.create_event_data.team_id = $scope.team.id\n      $scope.create_event_data.user_id = $rootScope.USER.id\n      $scope.create_event_data.event_team = $scope.team.id\n      if $scope.training_or_match == 'false'\n        console.log 'yep'\n        delete $scope.create_event_data.kick_off_date \n      console.log \"delete\"\n      console.log JSON.stringify $scope.create_event_data\n      if isNaN( $scope.create_event_data.location_id )\n        console.log \"Not a number\"\n        alertify.error \"You must select a location\"\n        return false\n\n      console.log $scope.create_event_data\n      COMMS.POST(\n        \"/event\"\n        $scope.create_event_data\n      ).then ( (res) ->\n        # console.log \"Create event response\"\n        alertify.success(\"Event created\")\n        console.log res.data\n        $scope.events = res.data\n      ), ( errResponse ) ->\n        console.log \"Create event error\"\n        alertify.error \"Create event failed\"\n        console.log errResponse\n\n\n    $scope.get_players_by_year = ( id ) ->\n      console.log \"Find by date\"\n      COMMS.GET(\n        \"/team/get-players-by-year/#{ $scope.team.id }\"\n        # params:\n        #   team_id: id\n      ).then ( (res) ->\n         console.log \"Playsers by age response\"\n         console.log res\n         \n      ), ( errResponse ) ->\n        console.log \"DOwnload error #{ JSON.stringify errResponse }\"\n\n  \n    $scope.download = ->\n      COMMS.GET(\n        \"/user/download-file\"\n      ).then ( (res) ->\n         console.log \"Download response\"\n         console.log res\n         \n      ), ( errResponse ) ->\n        console.log \"DOwnload error #{ JSON.stringify errResponse }\"\n\n    $scope.update_members = ->\n      console.log \"team id #{ $scope.team.id }\"\n      console.log \"Team members array\"\n      console.log $scope.team_members_array\n      COMMS.POST(\n        \"/team/update-members/#{ $scope.team.id }\"\n        team_members: $scope.team_members_array\n      ).then ( ( res ) ->\n        console.log \"Update team members\"\n        console.log res\n        $scope.team = res.data\n        $scope.team_members_array = res.data.team_members.map( ( member ) ->\n          member.id\n        )\n        # $('#select_player_modal').modal('hide')\n        alertify.success \"Team members updated successfully\"\n      ), ( errResponse ) ->\n        console.log \"Update team members error \"\n        console.log errResponse\n        alertify.error \"Failed to add team members\"\n\n    $scope.update_eligible_date = () ->\n      \n      console.log $scope.team\n      COMMS.POST(\n        \"/team/update/#{ $scope.team.id }\"\n        $scope.team\n      ).then ( ( res ) ->\n        console.log \"Update team date\"\n        console.log res.data\n        $scope.team.eligible_date =  moment(res.data[0].eligible_date).format('YYYY-MM-DD')\n        $scope.team.eligible_date_end =  moment(res.data[0].eligible_date_end).format('YYYY-MM-DD')\n        get_org_and_members()\n        alertify.success \"Eligible date updated\"\n      ), ( errResponse ) ->\n       \n        console.log \"Update date error \"\n        console.log errResponse\n        alertify.error \"Update failed\"\n\n    $('#select_player_modal').on 'shown.bs.modal', (e) -> #get team players when modal is opened\n      if $scope.team.eligible_date?\n        $scope.team.eligible_date = moment($scope.team.eligible_date).format('YYYY-MM-DD')\n        $scope.team.eligible_date_end = moment($scope.team.eligible_date_end).format('YYYY-MM-DD')\n        console.log $scope.team.eligible_date\n        get_org_and_members()   #update eligible player list. \n      else\n        alertify.log(\"Please set the eligible date of this team. Click to dismiss\", \"\", 0)\n        \n      \n      \n      \n\n\n    get_org_and_members = -> #fetch org info with members. Only members under the teams eligible age. \n      console.log \"org id #{ $scope.team.main_org.id }\"\n      \n      if $rootScope.USER.club_admin\n        console.log \"Fetching org and team members\"\n        COMMS.GET(\n          \"/org/get-org-team-members/#{ $scope.team.main_org.id }\"\n          $scope.team\n        ).then ( ( res ) ->\n          console.log \"Get org info \"\n          console.log res.data\n          $scope.org_members = res.data.org.org_members\n          $scope.team_members_array = res.data.team.team_members.map( ( member ) ->\n              member.id ) #create array containing team members user.id\n          \n          alertify.success \"Got players info\"\n        ), ( errResponse ) ->\n          console.log \"Get org info error \"\n          \n          console.log errResponse\n          alertify.error \"Couldn't get players info\"\n      else\n        COMMS.GET(\n          \"/team/org-members/#{ $scope.team.id }\"\n          $scope.team\n        ).then ( ( res ) ->\n          console.log \"Get org members\"\n          console.log res.data\n          $scope.org_members = res.data\n          $scope.team_members_array = $scope.team.team_members.map ( member ) ->\n            member.id\n        ), ( errResponse ) ->\n          \n          console.log \"Get org members error\"\n          console.log errResponse\n          alertify.error \"Failed to fetch org members\"\n\n    ###########################################\n    #               Map stuff                 #\n    #                                         #\n    ###########################################\n\n    set_map = ( lat, lng, set_markers, zoom ) -> # set map to new center/ possibly with marker\n      if !( zoom )?\n        zoom = 11\n\n      \n      for marker in $scope.markers\n        marker.setMap( null )\n      $scope.markers = new Array()\n\n\n      # console.log \" zoom #{ zoom }\"\n      \n      $scope.map.setZoom( zoom )\n    \n      # $scope.map.setCenter\n      #   lat: lat\n      #   lng: lng\n\n\n      if set_markers\n        marker = new (google.maps.Marker)(\n          position: \n            lat: lat\n            lng: lng\n          title: 'Hello World!')\n        $scope.markers.push marker\n\n        marker.setMap $scope.map\n\n        # google.maps.event.trigger($scope.map, 'resize')\n\n          # console.log point\n          \n      console.log \"center #{ JSON.stringify $scope.map.center }\"\n\n    $scope.find_address = -> # event triggered after user has stopped typing for a second. Debounce set on html element\n      geocoder = new google.maps.Geocoder() # geocode address to lat/lng coordinate\n      console.log \"Address #{ $scope.map.address }\"\n      geocoder.geocode( address: $scope.location.address, ( results, status ) ->\n        console.log results\n        $scope.map.markers = []\n        # console.log \"results \"\n        console.log results\n        # console.log \"Status #{ JSON.stringify status }\"\n\n        set_map( results[0].geometry.location.lat(), results[0].geometry.location.lng() , true, 15 )\n        \n        \n          \n      )\n\n    $scope.new_location = ->\n      if 'new_location' == $scope.create_event_data.location_id\n        $('#add_locations').modal 'show'\n        return true\n\n    uiGmapGoogleMapApi.then (maps) -> # event fired when maps are loaded\n      $scope.map = new (google.maps.Map)(document.getElementById('map-container'),\n        center:\n          lat: 51.8959843\n          lng: -8.5330899\n        zoom: 8)\n      $scope.markers = new Array()\n\n    $( document ).on 'shown.bs.modal', '#add_locations', ->\n      # $scope.map.center = \n      #   lat: 51.8959843\n      #   lng: -8.5330899\n    \n      # $scope.location.location_owner = $scope.org.name # set name of location_owner in text field\n      google.maps.event.trigger($scope.map, 'resize')\n\n      $scope.map.addListener 'click', ( e ) ->\n        $scope.location.lat = e.latLng.lat()\n        $scope.location.lng = e.latLng.lng()\n        set_map( e.latLng.lat(), e.latLng.lng(), true, $scope.map.zoom )\n\n    $scope.save_address = -> # event triggered when user clicks save address button. \n      console.log \"Save address\"\n      console.log $scope.location\n      $scope.location.user_id = $rootScope.USER.id\n      $scope.location.org_id = $scope.org.id\n      COMMS.POST( \n        '/location', $scope.location \n      ).then ( ( res ) ->\n        console.log \"Save adddres response\"\n        alertify.success \"Adddres saved\"\n        console.log res.data\n        $scope.locations = res.data.org_locations\n        $('#add_locations').modal 'hide'\n        # $scope.parsed_data = res\n      ), ( errResponse ) ->\n        console.log \"Save address error\"\n        # console.log errResponse\n        alertify.error errResponse.data\n\n######################## end of map stuff #############################\n    $scope.invite_manager_data = {}\n    $scope.invite_manager = ->\n      console.log $scope.invite_manager_data\n      COMMS.POST(\n        '/invite-manager'\n        { org_id: $scope.org.id\n\n        team_id: $scope.team.id\n        club_admin_id: $scope.user.id\n        club_admin_email: $scope.user.email\n        invited_email: $scope.invite_manager_data.invited_email\n        main_org_name: $scope.org.name\n        team_name: $scope.team.name }\n\n      ).then ( ( response ) ->\n        console.log \"Send invite mail\"\n        console.log response\n        alertify.success \"Invite sent ok\"\n        $('#invite_manager').modal 'hide'\n      ), ( errResponse ) ->\n        console.log \"Send invite mail\"\n        console.log errResponse\n        alertify.error errResponse.message \n      \n      \n\n    $scope.onTimeSet = ( nd, od ) ->\n      $scope.create_event_data.start_date = moment( nd ).format( 'DD-MM-YYYY HH:mm' )\n      $scope.create_event_data.kick_off_date = moment( nd ).add( 1, 'hours' ).format( 'DD-MM-YYYY HH:mm' )\n      $scope.create_event_data.end_date = moment( nd ).add( 2, 'hours' ).format( 'DD-MM-YYYY HH:mm' )\n      \n      \n\n])\n\nreturn_team = ( teams, id ) ->\n  team = (team for team in teams when team.id is parseInt( id ))\n  console.log \"Team #{ JSON.stringify team }\"\n  return team"]}