{"version":3,"sources":["controllers/EventController.coffee"],"names":[],"mappings":"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","file":"controllers/EventController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\n\nangular.module('subzapp').controller('EventController', [\n  '$scope'\n  '$rootScope'\n  '$state'\n  'COMMS'\n  '$stateParams'\n  'user'\n  'RESOURCES'\n  'alertify'\n  ( $scope, $rootScope, $state, COMMS, $stateParams, user, RESOURCES, alertify ) ->\n    console.log 'Event Controller'\n    console.log $stateParams.id\n\n    $scope.format = \"dd-MMMM-yyyy\"\n\n    \n    user.get_user().then ( (res) ->\n      $scope.user = $rootScope.USER\n      COMMS.GET(\n        \"/user/find-by-eventresponse/#{ $stateParams.id }\"\n      ).then ( ( resp ) ->\n        console.log \"Got event\"\n        console.log resp\n        alertify.success \"Got event info\"\n        $scope.event = resp.data\n        $scope.setDate()\n      ), ( event_err ) ->\n        console.log \"Failed to get event\"\n        console.log event_err\n        alertify.error \"Failed to get err \"\n      \n\n    ), ( errResponse ) ->\n      console.log \"User get error #{ JSON.stringify errResponse }\"\n      window.USER = null\n      $state.go 'login'\n\n    $scope.update_event = ->\n      console.log \"Help\"\n      console.log $scope.event\n\n      COMMS.POST(\n        \"/event/#{ $stateParams.id }\"\n        $scope.event\n      ).then ( ( res ) ->\n        console.log \"Event updated\"\n        console.log res\n        alertify.success \"Event updated successfully\"\n      ), ( errResponse ) ->\n        console.log \"Event update error \"\n        console.log errResponse\n        alertify.error \"Event update error\"\n\n    \n    #################### calendar stuff ####################################\n    \n    $scope.setDate = ->\n      $scope.event.start_date = moment( $scope.event.start_date ).format( 'YYYY-MM-DD HH:mm' )\n      $scope.event.kick_off_date = moment( $scope.event.kick_off_date ).format( 'YYYY-MM-DD HH:mm' ) if $scope.event.kick_off_date?\n      $scope.event.end_date = moment( $scope.event.end_date ).format( 'YYYY-MM-DD HH:mm' )\n      \n\n\n    $scope.onTimeSet = ( nd, od ) ->\n      $scope.event.start_date = moment( nd ).format( 'YYYY-MM-DD HH:mm' )\n      $scope.event.kick_off_date = moment( nd ).add( 1, 'hours' ).format( 'YYYY-MM-DD HH:mm' ) if $scope.event.kick_off_date?\n      $scope.event.end_date = moment( nd ).add( 2, 'hours' ).format( 'YYYY-MM-DD HH:mm' )\n    \n\n])\n"]}