{"version":3,"sources":["controllers/OrgController.coffee"],"names":[],"mappings":"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","file":"controllers/OrgController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\n\nangular.module('subzapp').controller('OrgController', [\n  '$scope'\n  '$state'\n  '$http'\n  '$window'\n  '$location'\n  'user'\n  'RESOURCES'\n  'alertify'\n  'usSpinnerService'\n  ( $scope, $state, $http, $window, $location, user, RESOURCES, alertify, usSpinnerService ) ->\n    user_token = window.localStorage.getItem 'user_token'\n\n    get_orgs = ->\n      $http(\n        method: 'GET'\n        url: \"#{ RESOURCES.DOMAIN }/orgs\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n      ).then( ( orgs ) ->\n        console.log \"Got orgs \"\n        console.log orgs.data\n        $scope.orgs = orgs.data\n      ).catch( ( err ) ->\n        console.log \"Got orgs error\"\n        console.log err\n        if err.status == 401\n          alertify.error \"You are not authorised to view this page\"\n          $state.go 'login'\n      )\n        \n\n    console.log 'Org Controller'\n    if !(window.USER?)\n      user.get_user().then ( (res) ->\n        get_orgs()\n\n      ), ( errResponse ) ->\n        console.log \"User get error #{ JSON.stringify errResponse }\"\n        window.USER = null\n        $state.go 'login'\n    else\n      get_orgs()\n      console.log \"USER already defined\"\n      \n      \n    $scope.get_org_info = ( id ) ->\n      usSpinnerService.spin('spinner-1')\n      console.log $scope.org\n      $http(\n        method: 'GET'\n        url: \"#{ RESOURCES.DOMAIN }/org/s3-info/#{ $scope.org }\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n\n      ).then ( ( res ) ->\n        usSpinnerService.stop('spinner-1')\n        console.log \"s3_info response\"\n        console.log res.data\n        $scope.files = res.data.Contents\n      ), ( errResponse ) ->\n        usSpinnerService.stop('spinner-1')\n        console.log \"s3_info error response\"\n        console.log err\n        if err.status == 401\n          alertify.error \"You are not authorised to view this page\"\n          $state.go 'login'\n      \n\n    $scope.parse_users = ->\n      console.log 'yep'\n      $http(\n        method: 'GET'\n        url: \"#{ RESOURCES.DOMAIN }/parse-players\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n        params:\n          org_id: 1\n      ).then ( ( res ) ->\n        console.log \"parse users response\"\n        console.log res\n        $scope.parsed_data = res\n      ), ( errResponse ) ->\n        console.log \"Parse users error\"\n        console.log errResponse\n\n])\n\n\n"]}