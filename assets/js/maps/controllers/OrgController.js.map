{"version":3,"sources":["controllers/OrgController.coffee"],"names":[],"mappings":"AAAA;AAEA,OAAO,CAAC,MAAR,CAAe,SAAf,CAAyB,CAAC,UAA1B,CAAqC,eAArC,EAAsD;EACpD,QADoD,EAEpD,QAFoD,EAGpD,OAHoD,EAIpD,SAJoD,EAKpD,WALoD,EAMpD,MANoD,EAOpD,WAPoD,EAQpD,UARoD,EASpD,SAAE,MAAF,EAAU,MAAV,EAAkB,KAAlB,EAAyB,OAAzB,EAAkC,SAAlC,EAA6C,IAA7C,EAAmD,SAAnD,EAA8D,QAA9D;AACE,QAAA;IAAA,UAAA,GAAa,MAAM,CAAC,YAAY,CAAC,OAApB,CAA4B,YAA5B;IAEb,QAAA,GAAW,SAAA;aACT,KAAK,CAAC,GAAN,CACE,OADF,CAEC,CAAC,IAFF,CAEQ,SAAE,IAAF;QACN,OAAO,CAAC,GAAR,CAAY,WAAZ;QACA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,IAAjB;eACA,MAAM,CAAC,IAAP,GAAc,IAAI,CAAC;MAHb,CAFR,CAMC,CAAC,OAAD,CAND,CAMS,SAAE,GAAF;QACP,OAAO,CAAC,GAAR,CAAY,gBAAZ;QACA,OAAO,CAAC,GAAR,CAAY,GAAZ;eACA,MAAM,CAAC,EAAP,CAAU,OAAV;MAHO,CANT;IADS;IAcX,OAAO,CAAC,GAAR,CAAY,gBAAZ;IACA,IAAG,CAAC,CAAC,mBAAD,CAAJ;MACE,IAAI,CAAC,QAAL,CAAA,CAAe,CAAC,IAAhB,CAAqB,CAAE,SAAC,GAAD;eACrB,QAAA,CAAA;MADqB,CAAF,CAArB,EAGG,SAAE,WAAF;QACD,OAAO,CAAC,GAAR,CAAY,iBAAA,GAAiB,CAAE,IAAI,CAAC,SAAL,CAAe,WAAf,CAAF,CAA7B;QACA,MAAM,CAAC,IAAP,GAAc;eACd,MAAM,CAAC,EAAP,CAAU,OAAV;MAHC,CAHH,EADF;KAAA,MAAA;MASE,QAAA,CAAA;MACA,OAAO,CAAC,GAAR,CAAY,sBAAZ,EAVF;;IAaA,MAAM,CAAC,YAAP,GAAsB,SAAE,EAAF;MACpB,OAAO,CAAC,GAAR,CAAY,eAAA,GAAiB,MAAM,CAAC,GAApC;MACA,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,GAAnB;aACA,KAAK,CAAC,GAAN,CACE,eAAA,GAAiB,MAAM,CAAC,GAD1B,CAEC,CAAC,IAFF,CAEO,CAAE,SAAE,GAAF;QAEP,OAAO,CAAC,GAAR,CAAY,kBAAZ;QACA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,IAAhB;eACA,MAAM,CAAC,KAAP,GAAe,GAAG,CAAC,IAAI,CAAC;MAJjB,CAAF,CAFP,EAOG,SAAE,WAAF;QAED,OAAO,CAAC,GAAR,CAAY,wBAAZ;QACA,OAAO,CAAC,GAAR,CAAY,WAAZ;QACA,IAAG,WAAW,CAAC,MAAZ,KAAsB,GAAzB;UACE,QAAQ,CAAC,KAAT,CAAe,0CAAf;iBACA,MAAM,CAAC,EAAP,CAAU,OAAV,EAFF;;MAJC,CAPH;IAHoB;WAmBtB,MAAM,CAAC,WAAP,GAAqB,SAAA;MACnB,OAAO,CAAC,GAAR,CAAY,KAAZ;aACA,KAAK,CAAC,IAAN,CACE,sBADF,EAEE;QAAA,MAAA,EAAQ,MAAM,CAAC,GAAf;OAFF,CAGC,CAAC,IAHF,CAGO,CAAE,SAAE,GAAF;QACP,OAAO,CAAC,GAAR,CAAY,sBAAZ;QACA,OAAO,CAAC,GAAR,CAAY,GAAZ;eACA,MAAM,CAAC,WAAP,GAAqB;MAHd,CAAF,CAHP,EAOG,SAAE,WAAF;QACD,OAAO,CAAC,GAAR,CAAY,mBAAZ;eACA,OAAO,CAAC,GAAR,CAAY,WAAZ;MAFC,CAPH;IAFmB;EAlDvB,CAToD;CAAtD","file":"controllers/OrgController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\r\n\r\nangular.module('subzapp').controller('OrgController', [\r\n  '$scope'\r\n  '$state'\r\n  'COMMS'\r\n  '$window'\r\n  '$location'\r\n  'user'\r\n  'RESOURCES'\r\n  'alertify'\r\n  ( $scope, $state, COMMS, $window, $location, user, RESOURCES, alertify ) ->\r\n    user_token = window.localStorage.getItem 'user_token'\r\n\r\n    get_orgs = ->\r\n      COMMS.GET(\r\n        '/orgs'\r\n      ).then( ( orgs ) ->\r\n        console.log \"Got orgs \"\r\n        console.log orgs.data\r\n        $scope.orgs = orgs.data\r\n      ).catch( ( err ) ->\r\n        console.log \"Got orgs error\"\r\n        console.log err\r\n        $state.go 'login'\r\n      )\r\n        \r\n\r\n    console.log 'Org Controller'\r\n    if !(window.USER?)\r\n      user.get_user().then ( (res) ->\r\n        get_orgs()\r\n\r\n      ), ( errResponse ) ->\r\n        console.log \"User get error #{ JSON.stringify errResponse }\"\r\n        window.USER = null\r\n        $state.go 'login'\r\n    else\r\n      get_orgs()\r\n      console.log \"USER already defined\"\r\n      \r\n      \r\n    $scope.get_org_info = ( id ) ->\r\n      console.log \"/org/s3-info/#{ $scope.org }\"\r\n      console.log $scope.org\r\n      COMMS.GET(\r\n        \"/org/s3-info/#{ $scope.org }\"\r\n      ).then ( ( res ) ->\r\n        \r\n        console.log \"s3_info response\"\r\n        console.log res.data\r\n        $scope.files = res.data.Contents\r\n      ), ( errResponse ) ->\r\n        \r\n        console.log \"s3_info error response\"\r\n        console.log errResponse\r\n        if errResponse.status == 401\r\n          alertify.error \"You are not authorised to view this page\"\r\n          $state.go 'login'\r\n      \r\n\r\n    $scope.parse_users = ->\r\n      console.log 'yep'\r\n      COMMS.POST(\r\n        \"/file/parse-players/\"\r\n        org_id: $scope.org\r\n      ).then ( ( res ) ->\r\n        console.log \"parse users response\"\r\n        console.log res\r\n        $scope.parsed_data = res\r\n      ), ( errResponse ) ->\r\n        console.log \"Parse users error\"\r\n        console.log errResponse\r\n\r\n])\r\n\r\n\r\n"]}