{"version":3,"sources":["controllers/OrgAdminController.coffee"],"names":[],"mappings":"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","file":"controllers/OrgAdminController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\n\nangular.module('subzapp').controller('OrgAdminController', [\n  '$scope'\n  '$state'\n  '$http'\n  '$window'\n  'user'\n  'RESOURCES'\n  'alertify'\n  'Upload'\n  'usSpinnerService'\n  'uiGmapGoogleMapApi'\n  ( $scope, $state, $http, $window, user, RESOURCES, alertify, Upload, usSpinnerService, uiGmapGoogleMapApi ) ->\n\n    $scope.map =\n      center:\n        latitude: 51.9181688\n        longitude: -8.5039876\n      zoom: 9\n\n    uiGmapGoogleMapApi.then (maps) ->\n      geocoder = new google.maps.Geocoder()\n      geocoder.geocode( address: 'the cottage, castlewhite, waterfall, cork', ( results, status ) ->\n        console.log \"Results #{ JSON.stringify results }\"\n        console.log \"Status #{ JSON.stringify status }\"\n      )\n\n    check_club_admin = ( user ) ->\n      if !user.club_admin\n        $state.go 'login' \n        alertify.error 'You are not a club admin. Contact subzapp admin team for assitance'\n\n    console.log 'OrgAdmin Controller'\n\n\n    user_token = window.localStorage.getItem 'user_token'\n    user.get_user().then ( (res) ->\n      # console.log \"Got user \"\n      check_club_admin(window.USER)\n      # console.log window.USER.orgs.length == 0\n      $scope.org = window.USER.orgs[0]\n      console.log \"org id #{ JSON.stringify $scope.org }\"\n      $scope.user = window.USER\n      $scope.orgs = window.USER.orgs\n      $scope.show_team_admin = ( window.USER.orgs.length == 0 )\n      \n      if $scope.org?\n        usSpinnerService.spin('spinner-1')\n        $http(\n          method: 'GET'\n          url: \"#{ RESOURCES.DOMAIN }/org/#{ $scope.org.id }\"\n          headers: { \n                    'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                    }\n          params: \n            org_id: $scope.org.id\n        ).then ( ( org_and_teams ) ->\n          usSpinnerService.stop('spinner-1')\n          console.log \"Get org and teams\"\n          console.log org_and_teams\n          $scope.teams = org_and_teams.data.org.teams\n          $scope.files = org_and_teams.data.s3_object.Contents\n        ), ( errResponse ) ->\n          usSpinnerService.stop('spinner-1')\n          console.log \"Get teams failed\"\n          console.log  errResponse\n          alertify.error 'Failed to fetch teams'\n    )\n\n    $scope.view_team = ( id ) -> # go to team page\n      window.localStorage.setItem 'team_id', id\n      $state.go 'team_manager'\n\n    $scope.org_create = ->\n      # console.log \"create #{JSON.stringify user}\"\n      console.log \"#{ RESOURCES.DOMAIN }/create-business\"\n      user_token = window.localStorage.getItem 'user_token'\n      $scope.business_form_data.user_id = window.localStorage.getItem 'user_id'\n      console.log JSON.stringify $scope.business_form_data\n      $http(  \n        method: 'POST'\n        url: \"#{ RESOURCES.DOMAIN }/create-business\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n        data: \n          $scope.business_form_data\n      ).then ( (response) ->\n\n        # console.log \"Business create return \"\n        # console.log response\n        $scope.orgs = response.data\n        $scope.org = response.data[0]\n        console.log \"Org set: #{ JSON.stringify $scope.org }\"\n        alertify.success \"Club created successfully\"\n        # $scope.business_form.$setPristine()\n        $('.business_name').val \"\"\n        $('.business_address').val \"\"\n\n      ), ( errResponse ) ->\n        console.log \"Business create error response #{ JSON.stringify errResponse }\"\n        $state.go 'login'\n\n    $scope.edit_org = ( id ) ->\n\n      console.log \"Org #{ JSON.stringify $scope.org }\"\n\n      $scope.show_team_admin = false\n      $http(\n        method: 'GET'\n        url: \"#{ RESOURCES.DOMAIN }/org-admins\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n        params:\n          org_id: id\n      ).then ( ( response ) ->\n        console.log \"get org-admins\"\n        console.log response\n        \n        $scope.admins = response.data.admins\n        $scope.teams = response.data.teams\n      ), ( errResponse ) ->\n        console.log \"Get org admins error\"\n        console.log errResponse\n\n    \n\n    $scope.team_create = ->\n      console.log \"Org id #{ JSON.stringify $scope.org }\"\n      $scope.team_form_data.org_id = $scope.org.id\n      console.log \"Form data #{ JSON.stringify $scope.team_form_data }\"\n      $http(\n        method: 'POST'\n        url: \"#{ RESOURCES.DOMAIN }/create-team\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n        data: $scope.team_form_data\n      ).then ( ( response ) ->\n        console.log \"Team create\"\n        console.log response\n        alertify.success response.data.message\n        $scope.teams = response.data.org.teams\n        $scope.team_form.$setPristine()\n        $scope.team_form_data = ''\n      ), ( errResponse ) ->\n        console.log \"Team create error\"\n        console.log errResponse\n        alertify.error errResponse\n\n    $scope.delete_team = ( id ) ->\n      $http(\n        url: \"#{ RESOURCES.DOMAIN }/delete-team\"\n        method: 'DELETE'\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n        data:\n          team_id: id\n          org_id: $scope.org.id\n      ).then ( ( res ) ->\n        console.log \"Team delete\"\n        console.log res\n        $scope.teams = res.data.teams\n      ), ( errResponse ) ->\n        console.log \"Team delete error\"\n        console.log errResponse\n\n    $scope.aws = ->\n      \n      $http(\n        method: 'GET'\n        url: \"#{ RESOURCES.DOMAIN }/parse-players\"\n        headers: { \n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\n                  }\n      ).then ( ( res ) ->\n        console.log \"aws responses\"\n        console.log res\n        $scope.parsed_data = res\n      ), ( errResponse ) ->\n        console.log \"aws error\"\n        console.log errResponse\n        alertify.error errResponse.data\n\n    # upload file\n\n    $scope.submit = ->\n      usSpinnerService.spin('spinner-1')\n      $scope.upload $scope.file\n\n    $scope.upload = (file) ->\n      console.log \"Upload\"\n      if ( $scope.file.info )?\n        \n        file_info = JSON.parse $scope.file.info\n        console.log \"Defined #{ file_info }\"\n        file_info = \n          org_id: $scope.org.id\n          team_id: file_info[0]\n          team_name: file_info[1]\n        console.log \"file_info #{ JSON.stringify file_info }\"\n      else\n        console.log \"Not defined \"\n        file_info = org_id: $scope.org.id\n      \n\n      # console.log \"File #{ JSON.stringify file_info[1] }\"\n      Upload.upload(\n        method: 'post'\n        url: '/file/upload'\n        data:\n          file_info\n\n        file: file     \n          \n      ).then ((resp) ->\n        usSpinnerService.stop('spinner-1')\n        console.log 'Success ' + JSON.stringify resp + 'uploaded. Response: ' + JSON.stringify resp.data\n        console.log resp\n        $scope.files = resp.data.bucket_info.Contents\n        alertify.success \"File uploaded ok\"\n        return\n      ), ((resp) ->\n        usSpinnerService.stop('spinner-1')\n        console.log 'Error status: ' + resp.status\n        alertify.error \"File failed to upload\"\n        console.log resp\n\n        alertify.error \"File upload failed. Status: #{ resp.status }\"\n        return\n      ), (evt) ->\n        progressPercentage = parseInt(100.0 * evt.loaded / evt.total)\n        console.log 'progress: ' + progressPercentage + '% ' + evt.config.data\n\n    \n    $scope.convert_date = ( date ) ->\n      console.log \"date #{ date }\"\n      console.log \"New date #{ moment( date ).format( \"DD-MM-YYYY\" ) }\"\n      return moment( date ).format( \"DD-MM-YYYY\" )\n\n])\n\nreturn_org = ( orgs, search) ->\n\n  for org in orgs    \n    if parseInt( org.id ) == parseInt( search.id )\n      return org\n\n\n\n\n# $http(\n#   method: 'POST'\n#   url: \"#{ RESOURCES.DOMAIN }/send-mail\"\n#   headers: { 'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\" }\n  \n# ).then ( ( response ) ->\n#   console.log \"get mandrill-object\"\n#   console.log response\n  \n# ), ( errResponse ) ->\n#   console.log \"Get mandrill-object\"\n#   console.log errResponse"]}