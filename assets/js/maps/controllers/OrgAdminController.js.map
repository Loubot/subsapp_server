{"version":3,"sources":["controllers/OrgAdminController.coffee"],"names":[],"mappings":"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","file":"controllers/OrgAdminController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\r\n\r\nangular.module('subzapp').controller('OrgAdminController', [\r\n  '$scope'\r\n  '$rootScope'\r\n  '$state'\r\n  'COMMS'\r\n  'user'\r\n  'RESOURCES'\r\n  'alertify'\r\n  'Upload'\r\n  'usSpinnerService'\r\n  'uiGmapGoogleMapApi'\r\n  ( $scope, $rootScope, $state, COMMS, user, RESOURCES, alertify, Upload, usSpinnerService, uiGmapGoogleMapApi ) ->\r\n    check_club_admin = ( user ) ->\r\n      if !user.club_admin\r\n        $state.go 'login' \r\n        alertify.error 'You are not a club admin. Contact subzapp admin team for assitance'\r\n\r\n    $scope.location = {}\r\n    console.log 'OrgAdmin Controller'\r\n\r\n\r\n    user_token = window.localStorage.getItem 'user_token'\r\n    user.get_user().then ( (res) ->\r\n      # console.log \"Got user \"\r\n      check_club_admin($rootScope.USER)\r\n      # console.log window.USER.orgs.length == 0\r\n      # $scope.org = $rootScope.USER.orgs[0]\r\n      # console.log \"org id #{ JSON.stringify $scope.org }\"\r\n      $scope.user = $rootScope.USER\r\n      $scope.orgs = $rootScope.USER.orgs\r\n      $scope.show_team_admin = ( $rootScope.USER.org.length == 0 )\r\n      $scope.show_map = true #display map\r\n\r\n\r\n      if $rootScope.USER.org.length > 0  # if org is defined fetch org info with teams info and s3 info\r\n        \r\n        COMMS.GET(\r\n          \"/org/#{ $rootScope.USER.org[0].id }\"\r\n        ).then ( ( org_and_teams ) ->\r\n          usSpinnerService.stop('spinner-1')\r\n          console.log \"Get org and teams\"\r\n          console.log org_and_teams\r\n          $scope.teams = org_and_teams.data.org.teams\r\n          $scope.files = org_and_teams.data.s3_object.Contents\r\n          $scope.org = org_and_teams.data.org\r\n          \r\n        ), ( errResponse ) ->\r\n          \r\n          console.log \"Get teams failed\"\r\n          console.log  errResponse\r\n          alertify.error 'Failed to fetch teams'\r\n    )\r\n\r\n    $scope.view_team = ( id ) -> # go to team page after clicking html link\r\n      window.localStorage.setItem 'team_id', id\r\n      $state.go 'team_manager'\r\n\r\n    $scope.org_create = -> # create a new org\r\n      # console.log \"create #{JSON.stringify user}\"\r\n\r\n      $scope.business_form_data.user_id = $rootScope.USER.id\r\n      \r\n      $scope.business_form_data.user_id = window.localStorage.getItem 'user_id'\r\n      console.log \"Form data #{ JSON.stringify $scope.business_form_data }\"\r\n      COMMS.POST(\r\n        '/org', $scope.business_form_data          \r\n      ).then ( (response) ->\r\n\r\n        # console.log \"Business create return \"\r\n        console.log response\r\n        $scope.orgs = response.data.user.orgs\r\n        $scope.org = response.data.org\r\n        $rootScope.USER = response.data.user\r\n\r\n        $scope.show_team_admin = false\r\n\r\n        $scope.location = response.data.location\r\n        console.log \"Location set #{ JSON.stringify $scope.location}\"\r\n        set_map( response.data.location.lat, response.data.location.lng, true, 15, true )\r\n        # console.log \"Org set: #{ JSON.stringify $scope.org }\"\r\n        alertify.success \"Club created successfully\"\r\n        # $scope.business_form.$setPristine()\r\n        $('.business_name').val \"\"\r\n        $('.business_address').val \"\"\r\n\r\n      ), ( errResponse ) ->\r\n        console.log \"Business create error response #{ JSON.stringify errResponse }\"\r\n        $state.go 'login'\r\n\r\n    $scope.edit_org = ( id ) ->  #update org details\r\n \r\n      console.log \"Org #{ JSON.stringify $scope.org }\"\r\n\r\n      $scope.show_team_admin = false\r\n      COMMS.GET(\r\n        '/org-admins', org_id: id\r\n      ).then ( ( response ) ->\r\n        console.log \"get org-admins\"\r\n        console.log response\r\n        \r\n        $scope.admins = response.data.admins\r\n        $scope.teams = response.data.teams\r\n      ), ( errResponse ) ->\r\n        console.log \"Get org admins error\"\r\n        console.log errResponse\r\n\r\n    \r\n\r\n    $scope.team_create = ->  # create a team\r\n      console.log \"Org id #{ JSON.stringify $scope.org }\"\r\n      $scope.team_form_data.org_id = $scope.org.id\r\n      console.log \"Form data #{ JSON.stringify $scope.team_form_data }\"\r\n      COMMS.POST(\r\n        '/team', $scope.team_form_data\r\n      ).then ( ( response ) ->\r\n        console.log \"Team create\"\r\n        console.log response\r\n        alertify.success response.data.message\r\n        $scope.teams = response.data.org.teams\r\n        $scope.team_form.$setPristine()\r\n        $scope.team_form_data = ''\r\n      ), ( errResponse ) ->\r\n        console.log \"Team create error\"\r\n        console.log errResponse\r\n        alertify.error errResponse\r\n\r\n    $scope.delete_team = ( id ) -> # delete a team\r\n      COMMS.DELETE(\r\n          'team', team_id: id, org_id: $scope.org.id\r\n      ).then ( ( res ) ->\r\n        console.log \"Team delete\"\r\n        console.log res\r\n        $scope.teams = res.data.teams\r\n      ), ( errResponse ) ->\r\n        console.log \"Team delete error\"\r\n        console.log errResponse\r\n\r\n  ###########################################\r\n  # Upload a file                           #\r\n  ###########################################\r\n    \r\n\r\n    $scope.submit = ->\r\n      usSpinnerService.spin('spinner-1')\r\n      $scope.upload $scope.file\r\n\r\n    $scope.upload = (file) ->\r\n      console.log \"Upload\"\r\n      if ( $scope.file.info )?\r\n        \r\n        file_info = JSON.parse $scope.file.info\r\n        console.log \"Defined #{ file_info }\"\r\n        file_info = \r\n          org_id: $scope.org.id\r\n          team_id: file_info[0]\r\n          team_name: file_info[1]\r\n        console.log \"file_info #{ JSON.stringify file_info }\"\r\n      else\r\n        console.log \"Not defined \"\r\n        file_info = org_id: $scope.org.id\r\n      \r\n\r\n      # console.log \"File #{ JSON.stringify file_info[1] }\"\r\n      Upload.upload(\r\n        method: 'post'\r\n        url: '/file/upload'\r\n        data:\r\n          file_info\r\n\r\n        file: file     \r\n          \r\n      ).then ((resp) ->\r\n        usSpinnerService.stop('spinner-1')\r\n        console.log 'Success ' + JSON.stringify resp + 'uploaded. Response: ' + JSON.stringify resp.data\r\n        console.log resp\r\n        $scope.files = resp.data.bucket_info.Contents\r\n        alertify.success \"File uploaded ok\"\r\n        return\r\n      ), ((resp) ->\r\n        usSpinnerService.stop('spinner-1')\r\n        console.log 'Error status: ' + resp.status\r\n        alertify.error \"File failed to upload\"\r\n        console.log resp\r\n\r\n        alertify.error \"File upload failed. Status: #{ resp.status }\"\r\n        return\r\n      ), (evt) ->\r\n        progressPercentage = parseInt(100.0 * evt.loaded / evt.total)\r\n        console.log 'progress: ' + progressPercentage + '% ' + evt.config.data\r\n\r\n    \r\n    $scope.convert_date = ( date ) ->\r\n      console.log \"date #{ date }\"\r\n      console.log \"New date #{ moment( date ).format( \"DD-MM-YYYY\" ) }\"\r\n      return moment( date ).format( \"DD-MM-YYYY\" )\r\n\r\n  ###########################################\r\n  # map stuff                               #\r\n  ###########################################\r\n    display_info = -> # display instructions for setting clubs location\r\n      if $scope.org\r\n        alertify.log \"Enter your clubs address\"\r\n        setTimeout ( ->\r\n          alertify.log \"You can drag the map to fine tune your clubs position\"\r\n        ), 3000\r\n        \r\n        setTimeout ( -> \r\n          alertify.log \"Click save to upate the location\"\r\n        ), 6000\r\n\r\n    drag_display_info = -> #display instructions for dragging map to update location\r\n    \r\n      window.clearTimeout timeoutHandler\r\n        # create new timeout to fire sesarch function after 500ms (or whatever you like)\r\n      timeoutHandler = window.setTimeout((->\r\n        alertify.log \"You can save this new location\"\r\n        setTimeout ( ->\r\n          alertify.log \"Just click the Save Address button\"\r\n        ), 2000\r\n        return\r\n      ), 2500)\r\n      \r\n    \r\n\r\n    set_map = ( lat, lng, set_markers, zoom, move ) -> # set map to new center/ possibly with marker\r\n      $scope.markers = new Array() if !( $scope.markers? )\r\n      for marker in $scope.markers\r\n        marker.setMap( null )\r\n      $scope.markers = new Array()\r\n\r\n      if !( zoom )?\r\n        zoom = 11\r\n      \r\n      # console.log \" zoom #{ zoom }\"\r\n\r\n      $scope.map.setZoom( zoom ) if $scope.map?\r\n\r\n      if move and $scope.map?\r\n        $scope.map.setCenter\r\n          lat: lat\r\n          lng: lng\r\n\r\n\r\n      if set_markers and google?\r\n        marker = new (google.maps.Marker)(\r\n          position: \r\n            lat: lat\r\n            lng: lng\r\n          title: 'Hello World!')\r\n        $scope.markers.push marker\r\n\r\n        marker.setMap $scope.map     \r\n\r\n    $scope.find_address = ( address ) -> # event triggered after user has stopped typing for a second. Debounce set on html element\r\n      geocoder = new google.maps.Geocoder() # geocode address to lat/lng coordinate\r\n      # console.log \"Address #{ address }\"\r\n      geocoder.geocode( address: address, ( results, status ) ->\r\n        \r\n        # console.log \"results \"\r\n        console.log results\r\n        # console.log \"Status #{ JSON.stringify status }\"\r\n\r\n        set_map( results[0].geometry.location.lat(), results[0].geometry.location.lng() , true, 15 )\r\n        \r\n        \r\n        \r\n          \r\n      )\r\n\r\n    $scope.save_address = -> # event triggered when user clicks save address button. \r\n      console.log $scope.location\r\n      if $scope.location?\r\n        $scope.location.id = $scope.location.id\r\n      # console.log $scope.map.center\r\n      console.log $scope.location\r\n      $scope.location.user_id = $rootScope.USER.id\r\n      $scope.location.org_id = $scope.org.id\r\n      COMMS.POST( \r\n        '/location', $scope.location \r\n      ).then ( ( res ) ->\r\n        console.log \"Save adddres response\"\r\n        alertify.success \"Adddres saved\"\r\n        console.log res\r\n        # $scope.parsed_data = res\r\n      ), ( errResponse ) ->\r\n        console.log \"Save address error\"\r\n        console.log errResponse\r\n        alertify.error \"Failed to save location\"\r\n\r\n     ###################### BEGIN MAPS ################################\r\n    uiGmapGoogleMapApi.then (maps) -> # event fired when maps are loaded\r\n      $scope.map = new (google.maps.Map)(document.getElementById('map-container'),\r\n        center:\r\n          lat: 51.9181688\r\n          lng: -8.5039876\r\n        zoom: 15)\r\n      $scope.markers = new Array()\r\n      set_map( 51.9181688, -8.5039876, true, null, true )\r\n\r\n      $scope.map.addListener 'click', ( e ) ->\r\n        $scope.location.lat = e.latLng.lat()\r\n        $scope.location.lng = e.latLng.lng()\r\n        set_map( e.latLng.lat(), e.latLng.lng(), true, $scope.map.zoom, false )\r\n        \r\n       \r\n        \r\n        \r\n\r\n    $scope.$watch 'org', ( old_org, new_org ) -> # watch org for changes and update coords\r\n      if $scope.org?\r\n        console.log \"yep\"\r\n        if $scope.org.org_locations.length > 0\r\n          $scope.location = $scope.org.org_locations[0]\r\n          set_map( $scope.location.lat, $scope.location.lng, true, 15, true )       \r\n \r\n\r\n ####################################################################\r\n #                   Message stuff                                  #\r\n ####################################################################\r\n    #initiliase scopes\r\n    $scope.multi_event = {}\r\n    $scope.managers_array = new Array()\r\n    $scope.teams_array = new Array()\r\n\r\n    $(document).on 'shown.bs.modal', '#multi_event_modal', ( e )->\r\n      COMMS.GET(\r\n        \"/org/teams-and-mangers/#{ $scope.org.id }\"\r\n      ).then ( ( resp) ->\r\n        console.log \"Got teams and managers\"\r\n        console.log resp.data\r\n        $scope.managers = resp.data.managers\r\n        # $scope.teams_array = $scope.org.teams.map( ( team ) ->\r\n        #   team.id\r\n        # )\r\n      ), ( errResponse ) ->\r\n        console.log \"Get teams and managers error\"\r\n        console.log errResponse\r\n\r\n      COMMS.GET(\r\n        \"/locations\"\r\n      ).then ( ( resp) ->\r\n        console.log \"Got locations\"\r\n        console.log resp.data\r\n        $scope.locations = resp.data\r\n        # $scope.teams_array = $scope.org.teams.map( ( team ) ->\r\n        #   team.id\r\n        # )\r\n      ), ( errResponse ) ->\r\n        console.log \"Got locations error\"\r\n        console.log errResponse\r\n\r\n\r\n\r\n\r\n    $scope.create_multi_event = ->\r\n      console.log 'yep'\r\n      console.log \"teams array #{ JSON.stringify $scope.teams_array }\"\r\n      console.log \"managers array #{ JSON.stringify $scope.managers_array }\"\r\n      COMMS.POST(\r\n        \"/event/create-multi-event\"\r\n        teams_array: $scope.teams_array\r\n        managers_array: $scope.managers_array\r\n        event_details: $scope.multi_event\r\n      ).then ( ( resp ) ->\r\n        console.log \"Multi event response\"\r\n        console.log resp\r\n        alertify.success \"Created event\"\r\n      ), ( errResponse ) ->\r\n        console.log \"Multi event error\"\r\n        console.log errResponse\r\n        alertify.error \"Failed to create event\"\r\n      \r\n\r\n\r\n])\r\n\r\nreturn_org = ( orgs, search) ->\r\n\r\n  for org in orgs    \r\n    if parseInt( org.id ) == parseInt( search.id )\r\n      return org"]}