{"version":3,"sources":["controllers/OrgAdminController.coffee"],"names":[],"mappings":"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","file":"controllers/OrgAdminController.js","sourceRoot":"/source/","sourcesContent":["'use strict'\r\n\r\nangular.module('subzapp').controller('OrgAdminController', [\r\n  '$scope'\r\n  '$state'\r\n  '$http'\r\n  '$window'\r\n  'user'\r\n  '$location'\r\n  'RESOURCES'\r\n  'alertify'\r\n  ( $scope, $state, $http, $window, user, $location, RESOURCES, alertify ) ->\r\n    check_club_admin = ( user ) ->\r\n      if !user.club_admin\r\n        $state.go 'login' \r\n        alertify.error 'You are not a club admin. Contact subzapp admin team for assitance'\r\n\r\n    console.log 'OrgAdmin Controller'\r\n\r\n\r\n    user_token = window.localStorage.getItem 'user_token'\r\n    user.get_user().then ( (res) ->\r\n      # console.log \"Got user \"\r\n      check_club_admin(window.USER)\r\n      # console.log window.USER.orgs.length == 0\r\n      $scope.org = window.USER.orgs[0]\r\n      console.log \"org id #{ JSON.stringify $scope.org }\"\r\n      $scope.user = window.USER\r\n      $scope.orgs = window.USER.orgs\r\n      $scope.show_team_admin = ( window.USER.orgs.length == 0 )\r\n      \r\n      if $scope.org?\r\n        $http(\r\n          method: 'GET'\r\n          url: \"#{ RESOURCES.DOMAIN }/get-teams\"\r\n          headers: { \r\n                    'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\r\n                    }\r\n          params: \r\n            org_id: $scope.org.id\r\n        ).then ( ( org_and_teams ) ->\r\n          console.log \"Get org and teams\"\r\n          console.log org_and_teams\r\n          $scope.teams = org_and_teams.data.teams\r\n        ), ( errResponse ) ->\r\n          console.log \"Get teams failed\"\r\n          console.log  errResponse\r\n          alertify.error 'Failed to fetch teams'\r\n    )\r\n\r\n    $scope.view_team = ( id ) -> # go to team page\r\n      window.localStorage.setItem 'team_id', id\r\n      $state.go 'team_manager'\r\n\r\n    $scope.org_create = ->\r\n      # console.log \"create #{JSON.stringify user}\"\r\n      console.log \"#{ RESOURCES.DOMAIN }/create-business\"\r\n      user_token = window.localStorage.getItem 'user_token'\r\n      $scope.business_form_data.user_id = window.localStorage.getItem 'user_id'\r\n      console.log JSON.stringify $scope.business_form_data\r\n      $http(  \r\n        method: 'POST'\r\n        url: \"#{ RESOURCES.DOMAIN }/create-business\"\r\n        headers: { \r\n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\r\n                  }\r\n        data: \r\n          $scope.business_form_data\r\n      ).then ( (response) ->\r\n\r\n        # console.log \"Business create return \"\r\n        # console.log response\r\n        $scope.orgs = response.data\r\n        $scope.org = response.data[0]\r\n        console.log \"Org set: #{ JSON.stringify $scope.org }\"\r\n        alertify.success \"Club created successfully\"\r\n        # $scope.business_form.$setPristine()\r\n        $('.business_name').val \"\"\r\n        $('.business_address').val \"\"\r\n\r\n      ), ( errResponse ) ->\r\n        console.log \"Business create error response #{ JSON.stringify errResponse }\"\r\n        $state.go 'login'\r\n\r\n    $scope.edit_org = ( id ) ->\r\n\r\n      console.log \"Org #{ JSON.stringify $scope.org }\"\r\n\r\n      $scope.show_team_admin = false\r\n      $http(\r\n        method: 'GET'\r\n        url: \"#{ RESOURCES.DOMAIN }/org-admins\"\r\n        headers: { \r\n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\r\n                  }\r\n        params:\r\n          org_id: id\r\n      ).then ( ( response ) ->\r\n        console.log \"get org-admins\"\r\n        console.log response\r\n        \r\n        $scope.admins = response.data.admins\r\n        $scope.teams = response.data.teams\r\n      ), ( errResponse ) ->\r\n        console.log \"Get org admins error\"\r\n        console.log errResponse\r\n\r\n    \r\n\r\n    $scope.team_create = ->\r\n      console.log \"Org id #{ JSON.stringify $scope.org }\"\r\n      $scope.team_form_data.org_id = $scope.org.id\r\n      console.log \"Form data #{ JSON.stringify $scope.team_form_data }\"\r\n      $http(\r\n        method: 'POST'\r\n        url: \"#{ RESOURCES.DOMAIN }/create-team\"\r\n        headers: { \r\n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\r\n                  }\r\n        data: $scope.team_form_data\r\n      ).then ( ( response ) ->\r\n        console.log \"Team create\"\r\n        console.log response\r\n        alertify.success response.data.message\r\n        $scope.teams = response.data.org.teams\r\n        $scope.team_form.$setPristine()\r\n        $scope.team_form_data = ''\r\n      ), ( errResponse ) ->\r\n        console.log \"Team create error\"\r\n        console.log errResponse\r\n        alertify.error errResponse\r\n\r\n    $scope.delete_team = ( id ) ->\r\n      $http(\r\n        url: \"#{ RESOURCES.DOMAIN }/delete-team\"\r\n        method: 'DELETE'\r\n        headers: { \r\n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\r\n                  }\r\n        data:\r\n          team_id: id\r\n          org_id: $scope.org.id\r\n      ).then ( ( res ) ->\r\n        console.log \"Team delete\"\r\n        console.log res\r\n        $scope.teams = res.data.teams\r\n      ), ( errResponse ) ->\r\n        console.log \"Team delete error\"\r\n        console.log errResponse\r\n\r\n    $scope.aws = ->\r\n      \r\n      $http(\r\n        method: 'GET'\r\n        url: \"#{ RESOURCES.DOMAIN }/parse-players\"\r\n        headers: { \r\n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\r\n                  }\r\n      ).then ( ( res ) ->\r\n        console.log \"aws responses\"\r\n        console.log res\r\n        $scope.parsed_data = res\r\n      ), ( errResponse ) ->\r\n        console.log \"aws error\"\r\n        console.log errResponse\r\n        alertify.error errResponse.data\r\n\r\n    $scope.get_kids = () ->\r\n      console.log 'Kids'\r\n\r\n      $http(\r\n        method: 'GET'\r\n        url: \"#{ RESOURCES.DOMAIN }/user/pick-kids\"\r\n        headers: { \r\n                  'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\"\r\n                  }\r\n        params: $scope.user\r\n      ).then ( ( res ) ->\r\n        console.log \"Kids response\"\r\n        console.log res\r\n      ), ( errResponse ) ->\r\n        console.log \"Kids error\"\r\n        console.log errResponse\r\n        alertify.error errResponse.data\r\n\r\n    \r\n    \r\n\r\n])\r\n\r\nreturn_org = ( orgs, search) ->\r\n\r\n  for org in orgs    \r\n    if parseInt( org.id ) == parseInt( search.id )\r\n      return org\r\n\r\n\r\n\r\n\r\n# $http(\r\n#   method: 'POST'\r\n#   url: \"#{ RESOURCES.DOMAIN }/send-mail\"\r\n#   headers: { 'Authorization': \"JWT #{ user_token }\", \"Content-Type\": \"application/json\" }\r\n  \r\n# ).then ( ( response ) ->\r\n#   console.log \"get mandrill-object\"\r\n#   console.log response\r\n  \r\n# ), ( errResponse ) ->\r\n#   console.log \"Get mandrill-object\"\r\n#   console.log errResponse"]}